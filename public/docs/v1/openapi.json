{
    "openapi": "3.0.0",
    "info": {
        "title": "ESTATO",
        "description": "HTTP JSON API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://api.localhost/api/v1",
            "description": "Api ESTATO"
        }
    ],
    "paths": {
        "/api/v1/": {
            "servers": [
                {
                    "url": "http://api.localhost/api/v1",
                    "description": "Api ESTATO"
                }
            ],
            "parameters": [
                {
                    "parameter": "headers--Accept-Language",
                    "name": "Accept-Language",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "en",
                            "pl",
                            "ru",
                            "uk"
                        ]
                    }
                }
            ]
        },
        "/jwt/token/centrifugo": {
            "post": {
                "tags": [
                    "JWT"
                ],
                "description": "get jwt token for centrifugo, if returns 401, use \"make api-init-centrifugo-user\"",
                "operationId": "CentrifugoJwtToken",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JWTTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jwt/token": {
            "post": {
                "tags": [
                    "JWT"
                ],
                "operationId": "JwtToken",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JWTTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/{driver}/callback": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "operationId": "SocialAuth",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/{driver}": {
            "get": {
                "tags": [
                    "OAuth"
                ],
                "operationId": "SocialAuthGetRedirect",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "format": "uri"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/token": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "operationId": "OAuthToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/token/refresh": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "operationId": "OAuthTokenRefresh",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/youtube": {
            "get": {
                "tags": [
                    "OAuth"
                ],
                "operationId": "YouTubeLoginGetRedirect",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "format": "uri"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/youtube/callback": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "operationId": "YoutubeAuth",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "blogs": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "operationId": "AllBlogs",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[category_id]",
                        "in": "query",
                        "description": "filter to select blogs via categories, ids coma separated",
                        "example": "cd7ec92c-3533-4bf4-86eb-1ff4af03869e,cd7ec92c-3533-4bf4-86eb-1ff4af03869e"
                    },
                    {
                        "name": "filter[tag]",
                        "in": "query",
                        "description": "filter by tag",
                        "example": "tag"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "filter search blogs by title, description",
                        "example": "word"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "latest",
                                "oldest"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogPaginationSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "blogs/categories": {
            "get": {
                "tags": [
                    "Blog.Category"
                ],
                "operationId": "AllBlogCategories",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BlogCategoryResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "blogs/{slug}": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "operationId": "GetBlog",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "blog slug",
                        "example": "slug"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BlogResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "blogs/categories/{slug}": {
            "get": {
                "tags": [
                    "Blog.Category"
                ],
                "operationId": "GetCategoryBlogs",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "blog category slug",
                        "example": "charity"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogPaginationSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/address/countries/{countyId}/cities": {
            "get": {
                "tags": [
                    "Address.Cities"
                ],
                "operationId": "AllCities",
                "parameters": [
                    {
                        "name": "countyId",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "filter[regionId]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/address/cities/{cityId}/districts": {
            "get": {
                "tags": [
                    "Address.Cities"
                ],
                "operationId": "AllCityDistricts",
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityDistrictResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/address/cities/{cityId}/underground-branches": {
            "get": {
                "tags": [
                    "Address.Cities"
                ],
                "operationId": "AllCityUndergroundBranches",
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\UndergroundBranchesResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/address/cities/{cityId}/undergrounds": {
            "get": {
                "tags": [
                    "Address.Cities"
                ],
                "operationId": "AllCityUndergrounds",
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityUndergroundsResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/address/countries": {
            "get": {
                "tags": [
                    "Address.Countries"
                ],
                "operationId": "AllCountries",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CountryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/address/countries/{countyId}/regions": {
            "get": {
                "tags": [
                    "Address.Regions"
                ],
                "operationId": "AllRegions",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\RegionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/address/countries/{countyId}/cities/{cityId}/streets": {
            "get": {
                "tags": [
                    "Address.Streets"
                ],
                "operationId": "AllStreets",
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "filter[regionId]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/address/cities/by-coordinates": {
            "get": {
                "tags": [
                    "Address.Cities"
                ],
                "operationId": "GetNearbyCityByCoordinates",
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/address/streets/by-coordinates": {
            "get": {
                "tags": [
                    "Address.Streets"
                ],
                "operationId": "GetNearbyStreetByCoordinates",
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\StreetResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/catalog/agencies": {
            "get": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "AllAgencies",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Page Number",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[country]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[district][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[division]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[city]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[district]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgencyPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "CreateAgency",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Agency\\Create\\CreateAgencyCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/agencies/calls/all": {
            "get": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "AllAgencyCall",
                "parameters": [
                    {
                        "name": "agencyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    },
                    {
                        "name": "filter[phone]",
                        "in": "query",
                        "required": false,
                        "example": "+38098110-26-38"
                    },
                    {
                        "name": "filter[apartmentId]",
                        "in": "query",
                        "required": false,
                        "example": "2743f329-9741-45a1-9a81-cf4a76f5a501"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "latest",
                                "oldest"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgencyCallPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/agencies/calls": {
            "post": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "CreateAgencyCall",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Agency\\Call\\Create\\CreateAgencyCallCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/agencies/{agencyId}/logo": {
            "post": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "ChangeLogoAgency",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Agency\\Logo\\ChangeLogoAgencyCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Change logo",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/agencies/{agencyId}/images/create": {
            "post": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "CreateImageAgency",
                "parameters": [
                    {
                        "name": "agencyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Agency\\Image\\Create\\CreateImageAgencyCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/agencies/{agencyId}": {
            "get": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "ShowAgency",
                "parameters": [
                    {
                        "name": "agencyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Agency\\AgencyResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "EditAgency",
                "parameters": [
                    {
                        "name": "agencyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Agency\\Edit\\EditAgencyCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "DeleteAgency",
                "parameters": [
                    {
                        "name": "agencyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/agencies/{agencyId}/images/{imageId}": {
            "delete": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "DeleteImageAgency",
                "parameters": [
                    {
                        "name": "agencyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    },
                    {
                        "name": "imageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/agencies/get/price": {
            "get": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "GetAgencyPrice",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Common\\AgencyPriceResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/catalog/agencies/{agencyId}/manager/{requestId}": {
            "put": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "AddAgencyManager",
                "parameters": [
                    {
                        "name": "agencyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/agencies/{agencyId}/manager/{userId}": {
            "put": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "RemoveAgencyManager",
                "parameters": [
                    {
                        "name": "agencyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/agencies/{agencyId}/manager/request": {
            "post": {
                "tags": [
                    "Catalog.Agencies"
                ],
                "operationId": "RequestToAddAgencyManager",
                "parameters": [
                    {
                        "name": "agencyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Agency\\Managers\\Request\\RequestsAddingManagerCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/actualize/money": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "ActualizeByMoneyApartment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Actualize\\RequestByMoney\\ActualizeCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/actualize/points": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "ActualizeByPointsApartment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Actualize\\RequestByPoints\\ActualizeCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/{id}/statistic": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "AddApartmentStatistic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Statistic\\Add\\AddStatisticCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments": {
            "get": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "AllApartments",
                "parameters": [
                    {
                        "name": "filter[price][block][currency]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[price][block][from]",
                        "in": "query",
                        "required": false,
                        "example": 20000
                    },
                    {
                        "name": "filter[price][block][to]",
                        "in": "query",
                        "required": false,
                        "example": 30000
                    },
                    {
                        "name": "filter[commission][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "agency",
                                "without-intermediaries"
                            ]
                        }
                    },
                    {
                        "name": "filter[areaFrom]",
                        "in": "query",
                        "required": false,
                        "example": 80
                    },
                    {
                        "name": "filter[areaTo]",
                        "in": "query",
                        "required": false,
                        "example": 120
                    },
                    {
                        "name": "filter[floorFrom]",
                        "in": "query",
                        "required": false,
                        "example": 2
                    },
                    {
                        "name": "filter[floorTo]",
                        "in": "query",
                        "required": false,
                        "example": 4
                    },
                    {
                        "name": "filter[areaKitchenFrom]",
                        "in": "query",
                        "required": false,
                        "example": 18
                    },
                    {
                        "name": "filter[areaKitchenTo]",
                        "in": "query",
                        "required": false,
                        "example": 24
                    },
                    {
                        "name": "filter[ceilingHeightFrom]",
                        "in": "query",
                        "required": false,
                        "example": 2.7
                    },
                    {
                        "name": "filter[ceilingHeightTo]",
                        "in": "query",
                        "required": false,
                        "example": 3
                    },
                    {
                        "name": "filter[is_new]",
                        "in": "query",
                        "required": false,
                        "example": true
                    },
                    {
                        "name": "filter[published]",
                        "in": "query",
                        "required": false,
                        "example": true
                    },
                    {
                        "name": "filter[division]",
                        "in": "query",
                        "description": "region",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[city]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[district][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[street][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[building][0]",
                        "in": "query",
                        "required": false,
                        "example": "5"
                    },
                    {
                        "name": "filter[buildingFrom]",
                        "in": "query",
                        "required": false,
                        "example": "2"
                    },
                    {
                        "name": "filter[buildingTo]",
                        "in": "query",
                        "required": false,
                        "example": "5"
                    },
                    {
                        "name": "filter[developer][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[coastCalculation]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "meter",
                                "all",
                                "Ten square meters"
                            ]
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "apartment",
                                "house",
                                "business",
                                "land"
                            ]
                        }
                    },
                    {
                        "name": "filter[operationType]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "selling",
                                "rent-out",
                                "daily"
                            ]
                        }
                    },
                    {
                        "name": "filter[category]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "new",
                                "secondary"
                            ]
                        }
                    },
                    {
                        "name": "filter[subcategory]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[rooms][0]",
                        "in": "query",
                        "required": false,
                        "example": 3
                    },
                    {
                        "name": "filter[readyYear][0]",
                        "in": "query",
                        "required": false,
                        "example": "2022"
                    },
                    {
                        "name": "filter[status][0]",
                        "in": "query",
                        "description": "construction status",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[class][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[underground][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[distance]",
                        "in": "query",
                        "description": "distance in meters",
                        "required": false,
                        "example": "750"
                    },
                    {
                        "name": "filter[stationBus]",
                        "in": "query",
                        "description": "distance in meters",
                        "required": false,
                        "example": "1100"
                    },
                    {
                        "name": "filter[flooring][0]",
                        "in": "query",
                        "description": "floor covering",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[heating][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[overlap][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[parking][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[security][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[repair][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[wall][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[wallInsulation][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[roof][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[bathroom][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[machines][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[comforts][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[multimedias][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[landscapes][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[additionals][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[communications][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[landBuildings][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[houseType]",
                        "in": "query",
                        "required": false,
                        "example": "113-81-3/1.2"
                    },
                    {
                        "name": "filter[country]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[user]",
                        "in": "query",
                        "description": "owner Apartment",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[similar][block][currency]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[similar][block][price]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20000
                    },
                    {
                        "name": "filter[similar][block][area]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integr"
                        },
                        "example": 200
                    },
                    {
                        "name": "filter[toggles][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[properties][block][0][id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[properties][block][0][value]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "100"
                    },
                    {
                        "name": "filter[propertiesRange][block][0][from][id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[propertiesRange][block][0][from][value]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "100"
                    },
                    {
                        "name": "filter[propertiesRange][block][0][to][id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[propertiesRange][block][0][to][value]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "100"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "priceAsc",
                                "priceDesc",
                                "latest",
                                "oldest"
                            ]
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "search text",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "CreateApartment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Create\\CreateApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/favorites/agencies": {
            "get": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "AllFavoritesAgenciesApartments",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "latest",
                                "oldest"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/favorites/all": {
            "get": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "AllFavoritesApartments",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "priceAsc",
                                "priceDesc",
                                "latest",
                                "oldest"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/favorites/developers": {
            "get": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "AllFavoritesDevelopersApartments",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "latest",
                                "oldest"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/dictionary": {
            "get": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "ApartmentDictionary",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentDictionaryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/dictionary/raise-actualize": {
            "get": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "ApartmentDictionaryRaiseActualize",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentDictionaryRaiseActualizeResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/dictionary-statistics": {
            "get": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "ApartmentDictionaryStatistics",
                "parameters": [
                    {
                        "name": "apartmentType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "apartment",
                                "house",
                                "business",
                                "land"
                            ]
                        }
                    },
                    {
                        "name": "currencyId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "coastCalculation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "meter"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentDictionaryStatisticsResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/booked": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "SetBookedApartment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Booked\\BookedApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/apartments/{apartmentId}/main-image/change": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "ChangeImageApartment",
                "parameters": [
                    {
                        "name": "apartmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Image\\Change\\ChangeImageApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/{apartmentId}/claim": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "ClaimApartment",
                "parameters": [
                    {
                        "name": "apartmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Claim\\ClaimApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/apartments/{apartmentId}/images/create": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "CreateImageApartment",
                "parameters": [
                    {
                        "name": "apartmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Image\\Create\\CreateImageApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/{id}": {
            "get": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "ShowApartment",
                "parameters": [
                    {
                        "name": "filter[price][block][currency]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[price][block][from]",
                        "in": "query",
                        "required": false,
                        "example": 20000
                    },
                    {
                        "name": "filter[price][block][to]",
                        "in": "query",
                        "required": false,
                        "example": 30000
                    },
                    {
                        "name": "filter[commission][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "agency",
                                "without-intermediaries"
                            ]
                        }
                    },
                    {
                        "name": "filter[areaFrom]",
                        "in": "query",
                        "required": false,
                        "example": 80
                    },
                    {
                        "name": "filter[areaTo]",
                        "in": "query",
                        "required": false,
                        "example": 120
                    },
                    {
                        "name": "filter[floorFrom]",
                        "in": "query",
                        "required": false,
                        "example": 2
                    },
                    {
                        "name": "filter[floorTo]",
                        "in": "query",
                        "required": false,
                        "example": 4
                    },
                    {
                        "name": "filter[areaKitchenFrom]",
                        "in": "query",
                        "required": false,
                        "example": 18
                    },
                    {
                        "name": "filter[areaKitchenTo]",
                        "in": "query",
                        "required": false,
                        "example": 24
                    },
                    {
                        "name": "filter[ceilingHeightFrom]",
                        "in": "query",
                        "required": false,
                        "example": 2.7
                    },
                    {
                        "name": "filter[ceilingHeightTo]",
                        "in": "query",
                        "required": false,
                        "example": 3
                    },
                    {
                        "name": "filter[is_new]",
                        "in": "query",
                        "required": false,
                        "example": true
                    },
                    {
                        "name": "filter[published]",
                        "in": "query",
                        "required": false,
                        "example": true
                    },
                    {
                        "name": "filter[division]",
                        "in": "query",
                        "description": "region",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[city]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[district][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[street][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[building][0]",
                        "in": "query",
                        "required": false,
                        "example": "5"
                    },
                    {
                        "name": "filter[buildingFrom]",
                        "in": "query",
                        "required": false,
                        "example": "2"
                    },
                    {
                        "name": "filter[buildingTo]",
                        "in": "query",
                        "required": false,
                        "example": "5"
                    },
                    {
                        "name": "filter[developer][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[coastCalculation]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "meter",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "apartment",
                                "house",
                                "business",
                                "land"
                            ]
                        }
                    },
                    {
                        "name": "filter[operationType]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "selling",
                                "rent-out",
                                "daily"
                            ]
                        }
                    },
                    {
                        "name": "filter[category]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "new",
                                "secondary"
                            ]
                        }
                    },
                    {
                        "name": "filter[rooms][0]",
                        "in": "query",
                        "required": false,
                        "example": 3
                    },
                    {
                        "name": "filter[readyYear][0]",
                        "in": "query",
                        "required": false,
                        "example": "2022"
                    },
                    {
                        "name": "filter[status][0]",
                        "in": "query",
                        "description": "construction status",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[class][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[repair][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[underground][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[distance]",
                        "in": "query",
                        "description": "distance in meters",
                        "required": false,
                        "example": "750"
                    },
                    {
                        "name": "filter[stationBus]",
                        "in": "query",
                        "description": "distance in meters",
                        "required": false,
                        "example": "1100"
                    },
                    {
                        "name": "filter[flooring][0]",
                        "in": "query",
                        "description": "floor covering",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[heating][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[overlap][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[parking][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[security][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[wall][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[notLastFloor]",
                        "in": "query",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "filter[multiLevel]",
                        "in": "query",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "filter[washingMachine]",
                        "in": "query",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "filter[furniture]",
                        "in": "query",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "filter[ownerMoreThreeYears]",
                        "in": "query",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "filter[conditioner]",
                        "in": "query",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "filter[finishing]",
                        "in": "query",
                        "description": "finishing strokes",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "filter[householdAppliances]",
                        "in": "query",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "filter[houseType]",
                        "in": "query",
                        "required": false,
                        "example": "113-81-3/1.2"
                    },
                    {
                        "name": "filter[country]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "priceAsc",
                                "priceDesc",
                                "latest",
                                "oldest"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ApartmentResource"
                                        },
                                        "meta": {
                                            "properties": {
                                                "previous": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "EditApartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Edit\\EditApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "DeleteApartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Delete\\DeleteApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "DeActivateApartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\DeActivate\\DeActivateApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/apartments/{apartmentId}/images/{imageId}": {
            "delete": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "DeleteImageApartment",
                "parameters": [
                    {
                        "name": "apartmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    },
                    {
                        "name": "imageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/favorites/create": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "SetFavoriteApartment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Favorite\\FavoriteApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/personal/apartments": {
            "get": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "AllPersonalApartments",
                "parameters": [
                    {
                        "name": "filter[announcementStatus][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "pending",
                                "rejected",
                                "published",
                                "archived"
                            ]
                        }
                    },
                    {
                        "name": "filter[isDeveloper]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "bool",
                            "example": 1
                        }
                    },
                    {
                        "name": "filter[booked]",
                        "in": "query",
                        "description": "filtering reservied apartments",
                        "required": false,
                        "schema": {
                            "type": "bool",
                            "example": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "priceAsc",
                                "priceDesc",
                                "latest",
                                "oldest"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/{id}/publish": {
            "put": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "PublishingApartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Publish\\PublishApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/raise-up/money": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "RaiseUpByMoneyApartment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Raise\\RequestByMoney\\RaiseCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/raise-up/points": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "RaiseUpByPointsApartment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Raise\\RequestByPoints\\RaiseCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/{id}/reject": {
            "patch": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "RejectApartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/{apartmentId}/take/phone": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "TakePhoneApartment",
                "parameters": [
                    {
                        "name": "apartmentId",
                        "in": "path",
                        "required": true,
                        "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/{id}/to-pending": {
            "put": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "ToPendingApartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\ToPending\\ToPendingApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/un-booked": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "SetUnBookedApartment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\UnBooked\\UnBookedApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/favorites/delete": {
            "delete": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "UnSetFavoriteApartment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\UnFavorite\\UnFavoriteApartmentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/{id}/unpublish": {
            "patch": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "UnPublishingApartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/apartments/{apartmentId}/views/create": {
            "post": {
                "tags": [
                    "Catalog.Apartments"
                ],
                "operationId": "SetViewApartment",
                "parameters": [
                    {
                        "name": "apartmentId",
                        "in": "path",
                        "required": true,
                        "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies": {
            "get": {
                "tags": [
                    "Catalog.Companies"
                ],
                "operationId": "AllCompanies",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Page Number",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[country]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[division]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[cityId]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search companies by name",
                        "example": "word"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "example": "housesAcceptAsc or housesAcceptDesc"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Catalog.Companies"
                ],
                "operationId": "CreateCompany",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\Create\\CreateCompanyCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/calls/all": {
            "get": {
                "tags": [
                    "Catalog.Companies"
                ],
                "operationId": "AllCompanyCall",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    },
                    {
                        "name": "filter[phone]",
                        "in": "query",
                        "required": false,
                        "example": "+38098110-26-38"
                    },
                    {
                        "name": "filter[apartmentId]",
                        "in": "query",
                        "required": false,
                        "example": "2743f329-9741-45a1-9a81-cf4a76f5a501"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "latest",
                                "oldest"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgencyCallPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/calls": {
            "post": {
                "tags": [
                    "Catalog.Companies"
                ],
                "operationId": "CreateCompanyCall",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\Call\\Create\\CreateCompanyCallCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/{companyId}/logo": {
            "post": {
                "tags": [
                    "Catalog.Companies"
                ],
                "operationId": "ChangeLogoCompany",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\Logo\\ChangeLogoCompanyCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/{companyId}": {
            "get": {
                "tags": [
                    "Catalog.Companies"
                ],
                "operationId": "ShowCompany",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "example": "housesAcceptAsc or housesAcceptDesc"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\CompanyResource"
                                        },
                                        "meta": {
                                            "properties": {
                                                "previous": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Catalog.Companies"
                ],
                "operationId": "EditCompany",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\Edit\\EditCompanyCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Catalog.Companies"
                ],
                "operationId": "DeleteCompany",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/{companyId}/manager/{requestId}": {
            "put": {
                "tags": [
                    "Catalog.Companies"
                ],
                "operationId": "AddCompanyManager",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/{companyId}/manager/{userId}": {
            "put": {
                "tags": [
                    "Catalog.Companies"
                ],
                "operationId": "RemoveCompanyManager",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/{companyId}/manager/request": {
            "post": {
                "tags": [
                    "Catalog.Companies"
                ],
                "operationId": "RequestToAddCompanyManager",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\Managers\\Request\\RequestsAddingManagerCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/{companyId}/complexes/additional": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "description": "for block Participation Projects",
                "operationId": "ParticipationProjectsByCompany",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ComplexResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/{companyId}/complexes": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "AllComplexesByCompany",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ComplexResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "CreateComplex",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Create\\CreateResidentialComplexCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/all/favorites": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "AllFavoritesComplexes",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Page Number",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResidentialComplexPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/all": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "AllComplexes",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Page Number",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[developer][0]",
                        "in": "query",
                        "description": "array company ids",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[division]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[city]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[district]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[price][block][currency]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[price][block][from]",
                        "in": "query",
                        "required": false,
                        "example": 20000
                    },
                    {
                        "name": "filter[price][block][to]",
                        "in": "query",
                        "required": false,
                        "example": 30000
                    },
                    {
                        "name": "filter[distance][block][lat]",
                        "in": "query",
                        "description": "latitude",
                        "required": false,
                        "example": "49.4183500"
                    },
                    {
                        "name": "filter[distance][block][lon]",
                        "in": "query",
                        "description": "longitude",
                        "required": false,
                        "example": "26.9793600"
                    },
                    {
                        "name": "filter[distance][block][radius]",
                        "in": "query",
                        "description": "meters",
                        "required": false,
                        "example": 1000
                    },
                    {
                        "name": "filter[coastCalculation]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "meter",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "filter[currency]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[rooms][0]",
                        "in": "query",
                        "required": false,
                        "example": 3
                    },
                    {
                        "name": "filter[constructionStatus][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[readyYear][0]",
                        "in": "query",
                        "required": false,
                        "example": "2022"
                    },
                    {
                        "name": "filter[class][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[repair][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[stationMetro]",
                        "in": "query",
                        "required": false,
                        "example": "750"
                    },
                    {
                        "name": "filter[stationBus]",
                        "in": "query",
                        "required": false,
                        "example": "1100"
                    },
                    {
                        "name": "filter[flooring][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[heating][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[parking][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[security][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[wall][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[insulation][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[apartments]",
                        "in": "query",
                        "required": false,
                        "example": "5"
                    },
                    {
                        "name": "filter[technology]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[territory][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[commissioning]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "completed",
                                "future",
                                "currentYear",
                                "nextYear"
                            ]
                        }
                    },
                    {
                        "name": "filter[underground][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResidentialComplexPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/complexes/apartments/all": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "description": "All apartments by developer(filter: developer [16-03]), by complex(filter: complex [16-06])",
                "operationId": "ComplexAllApartments",
                "parameters": [
                    {
                        "name": "filter[developer][0]",
                        "in": "query",
                        "description": "array company ids",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[complex][0]",
                        "in": "query",
                        "description": "array complex ids",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[price][block][currency]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[price][block][from]",
                        "in": "query",
                        "required": false,
                        "example": 20000
                    },
                    {
                        "name": "filter[price][block][to]",
                        "in": "query",
                        "required": false,
                        "example": 30000
                    },
                    {
                        "name": "filter[commission][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "agency",
                                "without-intermediaries"
                            ]
                        }
                    },
                    {
                        "name": "filter[areaFrom]",
                        "in": "query",
                        "required": false,
                        "example": 80
                    },
                    {
                        "name": "filter[areaTo]",
                        "in": "query",
                        "required": false,
                        "example": 120
                    },
                    {
                        "name": "filter[floorFrom]",
                        "in": "query",
                        "required": false,
                        "example": 2
                    },
                    {
                        "name": "filter[floorTo]",
                        "in": "query",
                        "required": false,
                        "example": 4
                    },
                    {
                        "name": "filter[areaKitchenFrom]",
                        "in": "query",
                        "required": false,
                        "example": 18
                    },
                    {
                        "name": "filter[areaKitchenTo]",
                        "in": "query",
                        "required": false,
                        "example": 24
                    },
                    {
                        "name": "filter[ceilingHeightFrom]",
                        "in": "query",
                        "required": false,
                        "example": 2.7
                    },
                    {
                        "name": "filter[ceilingHeightTo]",
                        "in": "query",
                        "required": false,
                        "example": 3
                    },
                    {
                        "name": "filter[is_new]",
                        "in": "query",
                        "required": false,
                        "example": true
                    },
                    {
                        "name": "filter[published]",
                        "in": "query",
                        "required": false,
                        "example": true
                    },
                    {
                        "name": "filter[country]",
                        "in": "query",
                        "description": "region",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[division]",
                        "in": "query",
                        "description": "region",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[city]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[district][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[street][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[building][0]",
                        "in": "query",
                        "required": false,
                        "example": "5"
                    },
                    {
                        "name": "filter[buildingFrom]",
                        "in": "query",
                        "required": false,
                        "example": "2"
                    },
                    {
                        "name": "filter[buildingTo]",
                        "in": "query",
                        "required": false,
                        "example": "5"
                    },
                    {
                        "name": "filter[developer][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[coastCalculation]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "meter",
                                "all",
                                "Ten square meters"
                            ]
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "apartment",
                                "house",
                                "business",
                                "land"
                            ]
                        }
                    },
                    {
                        "name": "filter[operationType]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "selling",
                                "rent-out",
                                "daily"
                            ]
                        }
                    },
                    {
                        "name": "filter[category]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "new",
                                "secondary"
                            ]
                        }
                    },
                    {
                        "name": "filter[rooms][0]",
                        "in": "query",
                        "required": false,
                        "example": 3
                    },
                    {
                        "name": "filter[readyYear][0]",
                        "in": "query",
                        "required": false,
                        "example": "2022"
                    },
                    {
                        "name": "filter[status][0]",
                        "in": "query",
                        "description": "construction status",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[class][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[underground][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[distance]",
                        "in": "query",
                        "description": "distance in meters",
                        "required": false,
                        "example": "750"
                    },
                    {
                        "name": "filter[stationBus]",
                        "in": "query",
                        "description": "distance in meters",
                        "required": false,
                        "example": "1100"
                    },
                    {
                        "name": "filter[flooring][0]",
                        "in": "query",
                        "description": "floor covering",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[heating][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[overlap][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[parking][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[security][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[repair][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[wall][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[wallInsulation][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[roof][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[bathroom][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[machines][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[comforts][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[multimedias][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[landscapes][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[additionals][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[communications][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[landBuildings][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[houseType]",
                        "in": "query",
                        "required": false,
                        "example": "113-81-3/1.2"
                    },
                    {
                        "name": "filter[country]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[user]",
                        "in": "query",
                        "description": "owner Apartment",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[similar][block][currency]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[similar][block][price]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20000
                    },
                    {
                        "name": "filter[similar][block][area]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integr"
                        },
                        "example": 200
                    },
                    {
                        "name": "filter[toggles][0]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[properties][block][0][id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "uuid"
                        },
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[properties][block][0][value]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "100"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "priceAsc",
                                "priceDesc",
                                "latest",
                                "oldest"
                            ]
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "search text",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/complete/house/all": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "AllCompleteHouse",
                "parameters": [
                    {
                        "name": "filter[complex]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[quarter]",
                        "in": "query",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "filter[year]",
                        "in": "query",
                        "required": false,
                        "example": "2023"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ComplexCompleteHouse\\ComplexCompleteHouseResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/companies/complexes/{complexId}/details": {
            "post": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "ComplexDetail",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\ComplexDetail\\ComplexDetailCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/catalog/companies/complexes/{complexId}/documents/create": {
            "post": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "CreateDocumentComplex",
                "parameters": [
                    {
                        "name": "complexId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Document\\Create\\CreateDocumentResidentialComplexCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/companies/complexes/favorites/create": {
            "post": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "SetFavoriteComplex",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Favorite\\FavoriteComplexCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/{complexId}/images/create": {
            "post": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "CreateImageComplex",
                "parameters": [
                    {
                        "name": "complexId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Image\\Create\\CreateImageResidentialComplexCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/{complexId}/documents/{imageId}": {
            "delete": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "DeleteDocumentComplex",
                "parameters": [
                    {
                        "name": "complexId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/companies/complexes/favorites/delete": {
            "delete": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "UnSetFavoriteComplex",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\UnFavorite\\UnFavoriteComplexCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/{complexId}/images/{imageId}": {
            "delete": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "DeleteImageComplex",
                "parameters": [
                    {
                        "name": "complexId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    },
                    {
                        "name": "imageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/{companyId}": {
            "delete": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "DeleteComplex",
                "parameters": [
                    {
                        "name": "complexId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/{complexId}": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "ShowComplex",
                "parameters": [
                    {
                        "name": "complexId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ComplexResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "EditComplex",
                "parameters": [
                    {
                        "name": "complexId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Edit\\EditResidentialComplexCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/infrastructures/all": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "AllInfrastructure",
                "parameters": [
                    {
                        "name": "filter[category][0]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[city]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[complex]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[country]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[division]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    },
                    {
                        "name": "filter[street]",
                        "in": "query",
                        "required": false,
                        "example": "261c6d92-53de-47ed-98dd-605f8bd3c67c"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\OpenApi\\V1\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\ResidentialComplexInfrastructurePaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/infrastructures/create": {
            "post": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "CreateInfrastructure",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\Create\\CreateInfrastructureCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/infrastructures/{infrastructureId}": {
            "put": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "EditInfrastructure",
                "parameters": [
                    {
                        "name": "infrastructureId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\Edit\\EditInfrastructureCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Edited",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "DeleteInfrastructure",
                "parameters": [
                    {
                        "name": "infrastructureId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Edited",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/infrastructures/{infrastructureId}/images": {
            "post": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "CreateImageInfrastructure",
                "parameters": [
                    {
                        "name": "infrastructureId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\Image\\Create\\CreateImageInfrastructureCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/infrastructures/images/{imageId}/delete": {
            "delete": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "DeleteImageInfrastructure",
                "parameters": [
                    {
                        "name": "imageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/plans/history": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "description": "(16-14)",
                "operationId": "PlansComplexHistory",
                "parameters": [
                    {
                        "name": "filter[complex]",
                        "in": "query",
                        "example": "cd7ec92c-3533-4bf4-86eb-1ff4af03869e"
                    },
                    {
                        "name": "filter[currency]",
                        "in": "query",
                        "example": "cd7ec92c-3533-4bf4-86eb-1ff4af03869e"
                    },
                    {
                        "name": "filter[createFrom]",
                        "in": "query",
                        "example": "2021-10-20 18:33:24"
                    },
                    {
                        "name": "filter[createTo]",
                        "in": "query",
                        "example": "2021-10-23 18:33:24"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexImage\\ResidentialComplexPlanHistoryResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/{complexId}/plans": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "description": "With ShowComplex endpoint (16-08)",
                "operationId": "PlansComplex",
                "parameters": [
                    {
                        "name": "complexId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[type][0]",
                        "in": "query",
                        "example": "cd7ec92c-3533-4bf4-86eb-1ff4af03869e"
                    },
                    {
                        "name": "filter[rooms][0]",
                        "in": "query",
                        "example": 2
                    },
                    {
                        "name": "filter[areaFrom]",
                        "in": "query",
                        "example": 30.6
                    },
                    {
                        "name": "filter[areaTo]",
                        "in": "query",
                        "example": 40.7
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexImage\\ResidentialComplexPlaneResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/companies/complexes/dictionary/profitability": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "description": "from endpoint ShowComplex get Complex with his Looks, next calculation: <br>\n        pricePerMetre = satisticAverage * (1 + complexLook.percent / 100 + complexFloorType.percent / 100) <br>\n        years = Round((price + repair) / area / pricePerMetre / 12) <br>\n        perMonth = area * satisticAverage * pricePerMetre",
                "operationId": "ComplexDictionaryProfitability",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Profitability\\ComplexProfitabilityResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/companies/complexes/{complexId}/plans/history/statistics": {
            "get": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "description": "(16-14)",
                "operationId": "StatisticsPlansComplexHistory",
                "parameters": [
                    {
                        "name": "complexId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexImage\\PlanHistoryQuarterResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "catalog/companies/complexes/{complexId}/visit": {
            "post": {
                "tags": [
                    "Catalog.Company.Complexes"
                ],
                "operationId": "VisitComplex",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Visit\\Create\\ComplexVisitCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/catalog/currencies": {
            "get": {
                "tags": [
                    "Catalog.Currencies"
                ],
                "operationId": "AllCurrencies",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Page Number",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "charity/members": {
            "get": {
                "tags": [
                    "Charity"
                ],
                "operationId": "AllCharitiesMembers",
                "parameters": [
                    {
                        "name": "filter[category]",
                        "in": "query",
                        "description": "filter to select members by charity category",
                        "example": "c1e96e18-298d-45bf-8b7f-c76f87041bdd"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CharityMembersPaginatedSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "charity": {
            "get": {
                "tags": [
                    "Charity"
                ],
                "operationId": "AllRafflesCharity",
                "parameters": [
                    {
                        "name": "filter[isFinished]",
                        "in": "query",
                        "description": "filter to select finished or unfinished raffles, expect bool value",
                        "example": true
                    },
                    {
                        "name": "filter[category_id]",
                        "in": "query",
                        "description": "filter by category",
                        "example": "ea9a0414-03d9-47a9-99ea-09e4cb586252"
                    },
                    {
                        "name": "filter[date]",
                        "in": "query",
                        "description": "filter by created_at field",
                        "example": "22.11.2022"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CharityResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "charity/{charityId}/members": {
            "get": {
                "tags": [
                    "Charity"
                ],
                "operationId": "CharityMembers",
                "parameters": [
                    {
                        "name": "charityId",
                        "in": "path",
                        "example": "c1e96e18-298d-45bf-8b7f-c76f87041bdd"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CharityMembersPaginatedSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "charity/{charityId}": {
            "get": {
                "tags": [
                    "Charity"
                ],
                "operationId": "GetRafflesCharity",
                "parameters": [
                    {
                        "name": "charityId",
                        "in": "path",
                        "example": "ea9a0414-03d9-47a9-99ea-09e4cb586252"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CharityResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "charity/videos": {
            "get": {
                "tags": [
                    "Charity"
                ],
                "operationId": "GetVideos",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Charity\\VideoResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "bonuses": {
            "get": {
                "tags": [
                    "Common"
                ],
                "operationId": "GetBonuses",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BonusResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "dailies": {
            "get": {
                "tags": [
                    "Common"
                ],
                "operationId": "GetDailiesReasons",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DailyResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "delete-reasons": {
            "get": {
                "tags": [
                    "Common"
                ],
                "operationId": "GetDeleteReasons",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DeleteReasonResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "exchange-limits": {
            "get": {
                "tags": [
                    "Common"
                ],
                "operationId": "GetExchangeLimits",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ExchangeLimitResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "exchange-rate": {
            "get": {
                "tags": [
                    "Common"
                ],
                "description": "get exchange rate for locuses",
                "operationId": "GetExchangeRate",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ExchangeRateResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "faqs": {
            "get": {
                "tags": [
                    "Common"
                ],
                "operationId": "AllFaqs",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/FaqPaginationSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "exchange-rate/points": {
            "get": {
                "tags": [
                    "Common"
                ],
                "operationId": "GetPointsExchangeRate",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ExchangeRatePointsResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "settings/contact": {
            "get": {
                "tags": [
                    "Settings.Contact"
                ],
                "operationId": "AllContacts",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/main/general": {
            "get": {
                "tags": [
                    "Main"
                ],
                "operationId": "General",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Main\\GeneralResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/main/blocks": {
            "get": {
                "tags": [
                    "Main"
                ],
                "operationId": "Blocks",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\Http\\Resources\\Main\\BlocksResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/main/realty": {
            "get": {
                "tags": [
                    "Main"
                ],
                "operationId": "Realty",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Main\\RealtyResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/main/top": {
            "get": {
                "tags": [
                    "Main"
                ],
                "operationId": "Top",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Page Number",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[operationType]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "enum": [
                                "selling",
                                "rent-out",
                                "daily"
                            ]
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "enum": [
                                "house",
                                "apartment",
                                "land",
                                "business"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/notaries": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "operationId": "AllNotary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "filter[country]",
                        "in": "query",
                        "description": "filter by country",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "filter[division]",
                        "in": "query",
                        "description": "filter by division(region)",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "filter[city]",
                        "in": "query",
                        "description": "filter by city",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "filter[district][0]",
                        "in": "query",
                        "description": "filter by districts",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by fields, use \"-\" for DECS sort",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotaryPaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Notary"
                ],
                "operationId": "CreateNotary",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Notary\\Create\\CreateNotaryCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/notaries/{id}": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "operationId": "GetNotary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotaryResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notaries/get/price": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "operationId": "GetNotaryPrice",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Common\\NotaryPriceResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notaries/map": {
            "get": {
                "tags": [
                    "Notary"
                ],
                "operationId": "NotaryMap",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "filter[region]",
                        "in": "query",
                        "description": "filter by region",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "filter[city]",
                        "in": "query",
                        "description": "filter by city",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NotaryMapResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pages/{slug}": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "operationId": "GetPage",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PageResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "raffles/categories": {
            "get": {
                "tags": [
                    "Raffle"
                ],
                "operationId": "AllRafflesCategories",
                "parameters": [
                    {
                        "name": "filter[isActive]",
                        "in": "query",
                        "description": "filter to select active or finished(when false) category",
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RaffleCategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "raffles/{raffleId}/history": {
            "get": {
                "tags": [
                    "Raffle"
                ],
                "operationId": "AllRaffleTicketHistory",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RaffleTicketHistoryPaginatedSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "raffles": {
            "get": {
                "tags": [
                    "Raffle"
                ],
                "operationId": "AllRaffles",
                "parameters": [
                    {
                        "name": "filter[isFinished]",
                        "in": "query",
                        "description": "filter to select finished or unfinished raffles, expecter bool value",
                        "example": true
                    },
                    {
                        "name": "filter[category_id]",
                        "in": "query",
                        "description": "filter by category",
                        "example": "ea9a0414-03d9-47a9-99ea-09e4cb586252"
                    },
                    {
                        "name": "filter[date]",
                        "in": "query",
                        "description": "filter by created_at field",
                        "example": "22.11.2022"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RaffleResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "raffles/history": {
            "get": {
                "tags": [
                    "Raffle"
                ],
                "operationId": "AllRafflesTicketHistory",
                "parameters": [
                    {
                        "name": "filter[category]",
                        "in": "query",
                        "description": "filter to select members by charity category",
                        "example": "c1e96e18-298d-45bf-8b7f-c76f87041bdd"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RaffleTicketHistoryPaginatedSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "raffles/{raffleId}": {
            "get": {
                "tags": [
                    "Raffle"
                ],
                "operationId": "GetRaffle",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RaffleResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "raffles/info": {
            "get": {
                "tags": [
                    "Raffle"
                ],
                "operationId": "GetRaffleInfo",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RaffleInfoResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "raffles/instruction": {
            "get": {
                "tags": [
                    "Raffle"
                ],
                "operationId": "GetRaffleInstructions",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "video": {
                                                    "type": "string",
                                                    "format": "uri"
                                                },
                                                "text": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "raffles/{raffleId}/history/{historyId}": {
            "get": {
                "tags": [
                    "Raffle"
                ],
                "operationId": "GetRaffleTicketHistory",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RaffleTicketHistoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "operationId": "AllTasks",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskPaginatedSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "term-of-use/accept": {
            "patch": {
                "tags": [
                    "User"
                ],
                "operationId": "AcceptTermsOfUse",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{userId}/achievements": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "GetAchievementsByUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAchievementResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/email/confirm": {
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "ConfirmEmail",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Confirmation\\EmailConfirm\\EmailConfirmCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/email/confirm/send": {
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "ConfirmEmailRequest",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/phone/confirm": {
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "ConfirmPhone",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Confirmation\\PhoneConfirm\\PhoneConfirmCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/phone/confirm/send": {
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "ConfirmPhoneRequest",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/code/validate": {
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "CodeValidate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Confirmation\\ValidateCode\\ValidateCodeCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/instruction/accept": {
            "post": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "AcceptInstruction",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/apartment/subscription": {
            "get": {
                "tags": [
                    "User.Current.Subscriptions"
                ],
                "operationId": "GetSubscription",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/App\\Http\\Resources\\User\\ApartmentSubscriptionResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User.Current.Subscriptions"
                ],
                "operationId": "CreateSubscription",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\AppartmentSubscription\\Create\\CreateSubscriptionCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "sub id",
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/apartment/subscription/{subscriptionId}": {
            "put": {
                "tags": [
                    "User.Current.Subscriptions"
                ],
                "operationId": "EditApartmentSubscription",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\AppartmentSubscription\\Edit\\EditSubscriptionCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User.Current.Subscriptions"
                ],
                "operationId": "DeleteSubscription",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/charity/{charityId}/buy-ticket": {
            "post": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "BuyCharityTicket",
                "parameters": [
                    {
                        "name": "charityId",
                        "in": "path",
                        "example": "ea9a0414-03d9-47a9-99ea-09e4cb586252"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\BuyCharityTicket\\BuyCharityTicketCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/raffle/{raffleId}/buy-ticket": {
            "post": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "BuyRuffleTicket",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\BuyRuffleTicket\\BuyRuffleTicketCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "historyId": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/password": {
            "patch": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "ChangeCurrentUserPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Edit\\ChangePassword\\ChangePasswordCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/email": {
            "patch": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "ChangeEmail",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Edit\\EditEmail\\EditEmailConfirm\\ConfirmEditEmailCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/email/confirm/send": {
            "post": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "ChangeEmailRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Edit\\EditEmail\\EditEmailRequest\\EditEmailRequestCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/phone": {
            "patch": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "ChangePhone",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Edit\\EditPhone\\EditPhoneConfirm\\ConfirmEditPhoneCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/phone/confirm/send": {
            "post": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "ChangePhoneRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Edit\\EditPhone\\EditPhoneRequest\\EditPhoneRequestCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/avatar": {
            "post": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "ChangeUserAvatar",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\ChangeAvatar\\ChangeUserAvatarCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/daily/claim": {
            "post": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "DailyClaim",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current": {
            "get": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "GetCurrentUser",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "EditCurrentUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Edit\\Edit\\UserEditCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "DeleteCurrentUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Delete\\DeleteUserCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/socials/{socialUserId}": {
            "delete": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "DeleteSocialUsers",
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/socials": {
            "post": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "EditSocialUsers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\EditSocialUsers\\EditSocialUsersCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/exchange-limit/extend": {
            "post": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "ExtendExchangeLimit",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\ExtendLimits\\ExtendLimitsCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "order id",
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/tickets": {
            "get": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "GetCurrentUserTickets",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RaffleMembershipResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/current/achievement": {
            "get": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "GetUserAchievement",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAchievementResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "users/current/tasks": {
            "get": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "UserTasks",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserTaskPaginatedSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "users/current/notifications": {
            "get": {
                "tags": [
                    "User.Current.Notifications"
                ],
                "operationId": "GetCurrentUserNotifications",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Page Number",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/NotificationPaginatedSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User.Current.Notifications"
                ],
                "operationId": "DeleteCurrentUserNotifications",
                "responses": {
                    "204": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/notifications/{notificationId}": {
            "delete": {
                "tags": [
                    "User.Current.Notifications"
                ],
                "operationId": "DeleteNotification",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "notification Id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/points/exchange": {
            "put": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "PointsExchange",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\PointsExchange\\PointsExchangeCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/promo/redeem": {
            "post": {
                "tags": [
                    "User.Current"
                ],
                "operationId": "RedeemPromoCode",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\Promo\\Redeem\\RedeemCodeCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/dialogues/my": {
            "get": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "AllMyDialogues",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Page Number",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[in]",
                        "in": "query",
                        "description": "Current User",
                        "required": false,
                        "example": "fd989a33-e049-4236-a6de-eb847c433548"
                    },
                    {
                        "name": "filter[out]",
                        "in": "query",
                        "description": "Current User",
                        "required": false,
                        "example": "fd989a33-e049-4236-a6de-eb847c433548"
                    },
                    {
                        "name": "filter[marker]",
                        "in": "query",
                        "description": "Current User",
                        "required": false,
                        "example": "fd989a33-e049-4236-a6de-eb847c433548"
                    },
                    {
                        "name": "filter[noMarker]",
                        "in": "query",
                        "description": "Current User",
                        "required": false,
                        "example": "fd989a33-e049-4236-a6de-eb847c433548"
                    },
                    {
                        "name": "filter[archive]",
                        "in": "query",
                        "description": "Current User",
                        "required": false,
                        "example": "fd989a33-e049-4236-a6de-eb847c433548"
                    },
                    {
                        "name": "filter[noArchive]",
                        "in": "query",
                        "description": "Current User",
                        "required": false,
                        "example": "fd989a33-e049-4236-a6de-eb847c433548"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "latest",
                                "oldest"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DialoguePaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/dialogues/archive": {
            "patch": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "ArchiveDialogue",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Dialogue\\Archive\\ArchiveDialogueCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/apartments/{apartmentsId}/dialogue/check": {
            "get": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "CheckDialogue",
                "parameters": [
                    {
                        "name": "apartmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DialogueResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/apartments/{apartmentId}/dialogue": {
            "post": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "CreateDialogue",
                "parameters": [
                    {
                        "name": "apartmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/dialogues/marker": {
            "patch": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "MarkerDialogue",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Dialogue\\Marker\\MarkerDialogueCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/dialogues/{dialoguesId}": {
            "get": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "ShowDialogue",
                "parameters": [
                    {
                        "name": "dialogueId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DialogueResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/dialogues/unarchive": {
            "patch": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "UnArchiveDialogue",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Dialogue\\UnArchive\\UnArchiveDialogueCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/dialogues/unmarker": {
            "patch": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "UnMarkerDialogue",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Dialogue\\UnMarker\\UnMarkerDialogueCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/{userId}/documents": {
            "get": {
                "tags": [
                    "User.Documents"
                ],
                "operationId": "GetUserDocument",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DocumentResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User.Documents"
                ],
                "operationId": "CreateUserDocument",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Documents\\Create\\CreateUserDocumentCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/{userId}/documents/{documentId}": {
            "delete": {
                "tags": [
                    "User.Documents"
                ],
                "operationId": "DeleteUserDocument",
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "documents/types": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "operationId": "GetDocumentTypes",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DocumentGroupResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}/info": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "GetUserById",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\Http\\Resources\\User\\UserShortResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/dialogues/{dialoguesId}/messages/list": {
            "get": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "AllMessagesDialogues",
                "parameters": [
                    {
                        "name": "dialogueId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Number of elements per page",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Page Number",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[dateFrom]",
                        "in": "query",
                        "required": false,
                        "example": "2022-12-06 14:43:45"
                    },
                    {
                        "name": "filter[dateTo]",
                        "in": "query",
                        "required": false,
                        "example": "2022-12-06 14:43:45"
                    },
                    {
                        "name": "filter[notViewed]",
                        "in": "query",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "filter[notViewedCurrent]",
                        "in": "query",
                        "required": false,
                        "example": "ea9a0414-03d9-47a9-99ea-09e4cb586252"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "date",
                                "dateDESC"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessagePaginationSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/messages/claim/dictionary": {
            "get": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "ClaimDictionary",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClaimDictionaryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/messages/{messageId}/claim": {
            "post": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "ClaimMessage",
                "parameters": [
                    {
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Message\\Claim\\ClaimMessageCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/messages/{messageId}/files/create": {
            "post": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "CreateFileMessage",
                "parameters": [
                    {
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Message\\File\\Create\\CreateFileMessageCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageImageResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{userId}/dialogues/{dialogueId}/massages": {
            "post": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "CreateMessage",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    },
                    {
                        "name": "dialogueId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Message\\Create\\CreateUserMessageCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/messages/{messageId}/files/{fileId}": {
            "get": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "DownloadImageMessage",
                "parameters": [
                    {
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    },
                    {
                        "name": "fileId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "DeleteImageMessage",
                "parameters": [
                    {
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    },
                    {
                        "name": "fileId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/messages/{messageId}": {
            "post": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "EditUserMessage",
                "parameters": [
                    {
                        "name": "messageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "1da2e2c6-e904-4350-9c1e-d8fdcaaf7a99"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Message\\Edit\\EditUserMessageCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/messages/viewed": {
            "patch": {
                "tags": [
                    "User.Messages"
                ],
                "operationId": "ViewedMessages",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Message\\Viewed\\ViewedMessageCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/orders": {
            "get": {
                "tags": [
                    "User.Orders"
                ],
                "operationId": "AllOrder",
                "parameters": [
                    {
                        "name": "filter[is_payed]",
                        "in": "query",
                        "description": "filter to select payed or unpaid orders",
                        "example": "true"
                    },
                    {
                        "name": "filter[number]",
                        "in": "query",
                        "description": "filter to select order by number",
                        "example": "1234"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderPaginateSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User.Orders"
                ],
                "operationId": "CreateOrder",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Order\\Create\\CreateOrderCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User.Orders"
                ],
                "operationId": "BulkDeleteOrder",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Order\\BulkDelete\\BulkDeleteOrderCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/orders/{orderId}": {
            "get": {
                "tags": [
                    "User.Orders"
                ],
                "operationId": "GetOrder",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/OrderResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User.Orders"
                ],
                "operationId": "DeleteOrder",
                "responses": {
                    "204": {
                        "description": "Ok"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/orders/liqpay": {
            "post": {
                "tags": [
                    "User.Orders"
                ],
                "operationId": "GetFormLiqPay",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "orderId": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "redirectUrl": {
                                        "type": "string",
                                        "format": "url"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "form": {
                                            "description": "payment from LiqPay (html)",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/orders/monobank": {
            "post": {
                "tags": [
                    "User.Orders"
                ],
                "operationId": "GetInvoiceMonobank",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "orderId": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "redirectUrl": {
                                        "type": "string",
                                        "format": "url"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "invoiceId": {
                                            "description": "invoice id from mono",
                                            "type": "string"
                                        },
                                        "pageUrl": {
                                            "description": "link to payment page",
                                            "type": "string",
                                            "format": "url"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "RegisterUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Register\\UserRegisterCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "users/password/reset/confirm": {
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "ResetPasswordConfirm",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\ResetPasswordConfirm\\ResetPasswordConfirmCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "users/password/reset": {
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "ResetPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\ResetPassword\\ResetPasswordCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "users/feedback-message/send": {
            "post": {
                "tags": [
                    "User.FeedbackMessage"
                ],
                "operationId": "SendFeedbackMessage",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\CreateFeedbackMessage\\UserCreateFeedbackMessageCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/{userId}/subscriptions": {
            "get": {
                "tags": [
                    "User.Subscriptions"
                ],
                "operationId": "AllSubscriptions",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SubscriptionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User.Subscriptions"
                ],
                "operationId": "EditUserSubscription",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App\\Commands\\User\\Subscription\\edit\\EditUserSubscriptionCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "users/current/transactions": {
            "get": {
                "tags": [
                    "User.Transactions"
                ],
                "operationId": "AllTransaction",
                "parameters": [
                    {
                        "name": "searchFields",
                        "in": "query",
                        "required": false,
                        "example": "field_1:value_1&field_2:value_2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionPaginateSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/centrifugo/connect": {
            "get": {
                "tags": [
                    "Websockets"
                ],
                "operationId": "ContrifugoConnect",
                "responses": {
                    "101": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App\\OpenApi\\V1\\Websocket\\ConnectionResponse"
                                }
                            }
                        }
                    }
                },
                "servers": [
                    {
                        "url": "/api/v1",
                        "description": "server for websockets"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "App\\Commands\\Catalog\\Agency\\Call\\Create\\CreateAgencyCallCommand": {
                "required": [
                    "agencyId",
                    "apartmentId",
                    "userId",
                    "phone",
                    "status",
                    "description"
                ],
                "properties": {
                    "agencyId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "f85df165-cf08-4eec-b4e5-be24635511ef"
                    },
                    "apartmentId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "f85df165-cf08-4eec-b4e5-be24635511ef"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "fixed"
                        ]
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Agency\\Create\\CreateAgencyCommand": {
                "required": [
                    "id",
                    "name",
                    "userId",
                    "phone",
                    "streetId",
                    "houseNumber",
                    "lat",
                    "lon",
                    "addressNumber"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "bossName": {
                        "type": "string",
                        "nullable": true
                    },
                    "bossSurName": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "f85df165-cf08-4eec-b4e5-be24635511ef"
                    },
                    "houseNumber": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "float",
                        "example": "30.317380"
                    },
                    "lon": {
                        "type": "number",
                        "format": "float",
                        "example": "30.317380"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "districtId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string"
                    },
                    "additionalPhones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "addressNumber": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Agency\\Delete\\DeleteAgencyCommand": {},
            "App\\Commands\\Catalog\\Agency\\Edit\\EditAgencyCommand": {
                "required": [
                    "id",
                    "userId",
                    "name",
                    "phone",
                    "streetId",
                    "houseNumber",
                    "lat",
                    "lon",
                    "addressNumber"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "bossName": {
                        "type": "string",
                        "nullable": true
                    },
                    "bossSurName": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "f85df165-cf08-4eec-b4e5-be24635511ef"
                    },
                    "houseNumber": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "float",
                        "example": "30.317380"
                    },
                    "lon": {
                        "type": "number",
                        "format": "float",
                        "example": "30.317380"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "districtId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string"
                    },
                    "additionalPhones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "addressNumber": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Agency\\Image\\Create\\CreateImageAgencyCommand": {
                "properties": {
                    "image": {
                        "description": "base64 or null",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Agency\\Logo\\ChangeLogoAgencyCommand": {
                "properties": {
                    "image": {
                        "description": "base64 or null",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Agency\\Managers\\Remove\\RemoveManagerCommand": {
                "required": [
                    "userId"
                ],
                "properties": {
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Agency\\Managers\\Request\\RequestsAddingManagerCommand": {
                "required": [
                    "userVisibleId"
                ],
                "properties": {
                    "userVisibleId": {}
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\Call\\Create\\CreateCompanyCallCommand": {
                "required": [
                    "companyId",
                    "apartmentId",
                    "userId",
                    "phone",
                    "status",
                    "description"
                ],
                "properties": {
                    "companyId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "f85df165-cf08-4eec-b4e5-be24635511ef"
                    },
                    "apartmentId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "f85df165-cf08-4eec-b4e5-be24635511ef"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "fixed"
                        ]
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\Create\\CreateCompanyCommand": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "yearFoundation": {
                        "type": "integer",
                        "nullable": true
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "about": {
                        "type": "string",
                        "nullable": true
                    },
                    "socials": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "link": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\Delete\\DeleteCompanyCommand": {},
            "App\\Commands\\Catalog\\Company\\Edit\\EditCompanyCommand": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "yearFoundation": {
                        "type": "integer",
                        "nullable": true
                    },
                    "about": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "socials": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "link": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\Logo\\ChangeLogoCompanyCommand": {
                "properties": {
                    "image": {
                        "description": "base64 or null",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\Managers\\Remove\\RemoveManagerCommand": {
                "required": [
                    "userId"
                ],
                "properties": {
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\Managers\\Request\\RequestsAddingManagerCommand": {
                "required": [
                    "userVisibleId"
                ],
                "properties": {
                    "userVisibleId": {}
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Actualize\\RequestByMoney\\ActualizeCommand": {
                "required": [
                    "id"
                ],
                "properties": {
                    "apartments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "actualizationId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Actualize\\RequestByPoints\\ActualizeCommand": {
                "required": [
                    "id"
                ],
                "properties": {
                    "apartments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "actualizationId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Booked\\BookedApartmentCommand": {
                "required": [
                    "apartmentIds",
                    "userId"
                ],
                "properties": {
                    "apartmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Claim\\ClaimApartmentCommand": {
                "properties": {
                    "reason": {
                        "type": "string",
                        "nullable": true
                    },
                    "reasonId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Create\\CreateApartmentCommand": {
                "required": [
                    "id",
                    "userId",
                    "userType",
                    "apartmentType",
                    "operationType",
                    "apartmentCategory"
                ],
                "properties": {
                    "userType": {
                        "type": "string",
                        "enum": [
                            "private-person",
                            "private-realtor",
                            "agency-realtor",
                            "company-spokesman",
                            "developer"
                        ]
                    },
                    "apartmentType": {
                        "type": "string",
                        "enum": [
                            "house",
                            "apartment",
                            "business",
                            "land"
                        ]
                    },
                    "apartmentCategory": {
                        "type": "string",
                        "enum": [
                            "new",
                            "secondary"
                        ]
                    },
                    "operationType": {
                        "type": "string",
                        "enum": [
                            "selling",
                            "rent-out",
                            "daily"
                        ]
                    },
                    "residentialComplexId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "a522ee03-c2d1-497d-a6b3-8f2e66f877c2",
                        "nullable": true
                    },
                    "classId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "priceDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\PriceDto"
                    },
                    "generalParamsDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\GeneralParamsDto"
                    },
                    "statusDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\StatusDto"
                    },
                    "addressDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\AddressDto"
                    },
                    "alterAddress": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\AlterAddressDto"
                    },
                    "extraDataDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\ExtraDataDto"
                    },
                    "extraMarkerDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\ExtraMarkerDto"
                    },
                    "stations": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "transportType": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "distance": {
                                    "type": "string"
                                },
                                "metroId": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "toggles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "apartmentTypeSubcategoryId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "propertyId": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\DeActivate\\DeActivateApartmentCommand": {
                "properties": {
                    "deleteReason": {
                        "type": "string"
                    },
                    "deleteReasonText": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Delete\\DeleteApartmentCommand": {},
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\AddressDto": {
                "properties": {
                    "streetId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "districtId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "buildingNumber": {
                        "type": "string"
                    },
                    "apartmentNumber": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "30.317380"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "50.566139"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\AlterAddressDto": {
                "properties": {
                    "countryId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "divisionId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "cityName": {
                        "type": "string"
                    },
                    "streetName": {
                        "type": "string"
                    },
                    "districtName": {
                        "type": "string"
                    },
                    "buildingNumber": {
                        "type": "string"
                    },
                    "apartmentNumber": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "30.317380"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "50.566139"
                    },
                    "cityId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\ExtraDataDto": {
                "properties": {
                    "ceilingHeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "areaKitchen": {
                        "type": "number",
                        "format": "float"
                    },
                    "houseType": {
                        "type": "string"
                    },
                    "flooringId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "heatingId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "overlapId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parkingId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "repairId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "wallId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "securityId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "wallInsulationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "roofId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "bathroomId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "machineIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "comfortIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "multimediaIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "landscapeIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "additionalIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "communicationIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "landBuildingIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\ExtraMarkerDto": {
                "properties": {
                    "notLastFloor": {
                        "type": "boolean"
                    },
                    "multiLevel": {
                        "type": "boolean"
                    },
                    "washingMachine": {
                        "type": "boolean"
                    },
                    "furniture": {
                        "type": "boolean"
                    },
                    "ownerMoreThreeYears": {
                        "type": "boolean"
                    },
                    "conditioner": {
                        "type": "boolean"
                    },
                    "finishing": {
                        "type": "boolean"
                    },
                    "householdAppliances": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\GeneralParamsDto": {
                "properties": {
                    "area": {
                        "type": "number",
                        "format": "float",
                        "example": 100.5
                    },
                    "roomCount": {
                        "type": "integer",
                        "example": 4
                    },
                    "description": {
                        "type": "string"
                    },
                    "floor": {
                        "type": "integer",
                        "example": 7
                    },
                    "videoUrl": {
                        "type": "uri",
                        "example": "https://youtu.be"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\PriceDto": {
                "properties": {
                    "price": {
                        "type": "integer",
                        "example": 10000
                    },
                    "currencyId": {
                        "type": "uuid"
                    },
                    "coastCalculation": {
                        "enum": [
                            "all",
                            "meter",
                            "Ten square meters"
                        ]
                    },
                    "commission": {
                        "enum": [
                            "agency",
                            "without-intermediaries"
                        ]
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\StatusDto": {
                "properties": {
                    "statusId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "isReady": {
                        "type": "boolean"
                    },
                    "readyYear": {
                        "type": "integer"
                    },
                    "isNew": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Edit\\EditApartmentCommand": {
                "required": [
                    "id",
                    "userId",
                    "userType",
                    "apartmentType",
                    "operationType",
                    "apartmentCategory"
                ],
                "properties": {
                    "userType": {
                        "type": "string",
                        "enum": [
                            "private-person",
                            "private-realtor",
                            "agency-realtor",
                            "company-spokesman",
                            "developer"
                        ]
                    },
                    "apartmentType": {
                        "type": "string",
                        "enum": [
                            "house",
                            "apartment",
                            "business",
                            "land"
                        ]
                    },
                    "apartmentCategory": {
                        "type": "string",
                        "enum": [
                            "new",
                            "secondary"
                        ]
                    },
                    "operationType": {
                        "type": "string",
                        "enum": [
                            "selling",
                            "rent-out",
                            "daily"
                        ]
                    },
                    "residentialComplexId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "a522ee03-c2d1-497d-a6b3-8f2e66f877c2",
                        "nullable": true
                    },
                    "classId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "priceDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\PriceDto"
                    },
                    "generalParamsDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\GeneralParamsDto"
                    },
                    "statusDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\StatusDto"
                    },
                    "addressDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\AddressDto"
                    },
                    "alterAddress": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\AlterAddressDto"
                    },
                    "extraDataDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\ExtraDataDto"
                    },
                    "extraMarkerDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\ExtraMarkerDto"
                    },
                    "stations": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "transportType": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "distance": {
                                    "type": "string"
                                },
                                "metroId": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "toggles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "apartmentTypeSubcategoryId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "propertyId": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "editReasons": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "change-price",
                                "change-photos",
                                "change-description",
                                "change-commission"
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Favorite\\FavoriteApartmentCommand": {
                "required": [
                    "apartmentIds",
                    "userId"
                ],
                "properties": {
                    "apartmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Image\\Change\\ChangeImageApartmentCommand": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "main",
                            "facade",
                            "plan"
                        ]
                    },
                    "image": {
                        "description": "base64 or null",
                        "type": "string",
                        "nullable": true
                    },
                    "orient": {
                        "description": "int or null",
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Image\\Create\\CreateImageApartmentCommand": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "additional"
                        ]
                    },
                    "image": {
                        "description": "base64 or null",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Moderation\\Published\\ModerationPublishedApartmentCommand": {
                "required": [
                    "id"
                ]
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Moderation\\Rejected\\ModerationRejectedApartmentCommand": {
                "required": [
                    "id"
                ]
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Publish\\PublishApartmentCommand": {
                "required": [
                    "id",
                    "userId",
                    "userType",
                    "apartmentType",
                    "operationType",
                    "apartmentCategory"
                ],
                "properties": {
                    "userType": {
                        "type": "string",
                        "enum": [
                            "private-person",
                            "private-realtor",
                            "agency-realtor",
                            "company-spokesman",
                            "developer"
                        ]
                    },
                    "apartmentType": {
                        "type": "string",
                        "enum": [
                            "house",
                            "apartment",
                            "business",
                            "land"
                        ]
                    },
                    "apartmentCategory": {
                        "type": "string",
                        "enum": [
                            "new",
                            "secondary"
                        ]
                    },
                    "operationType": {
                        "type": "string",
                        "enum": [
                            "selling",
                            "rent-out",
                            "daily"
                        ]
                    },
                    "residentialComplexId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "a522ee03-c2d1-497d-a6b3-8f2e66f877c2",
                        "nullable": true
                    },
                    "classId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "priceDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\PriceDto"
                    },
                    "generalParamsDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\GeneralParamsDto"
                    },
                    "statusDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\StatusDto"
                    },
                    "addressDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\AddressDto"
                    },
                    "alterAddress": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\AlterAddressDto"
                    },
                    "extraDataDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\ExtraDataDto"
                    },
                    "extraMarkerDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\ExtraMarkerDto"
                    },
                    "stations": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "transportType": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "distance": {
                                    "type": "string"
                                },
                                "metroId": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "toggles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "apartmentTypeSubcategoryId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "propertyId": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Raise\\RequestByMoney\\RaiseCommand": {
                "required": [
                    "id"
                ],
                "properties": {
                    "apartments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "raiseUpId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Raise\\RequestByPoints\\RaiseCommand": {
                "required": [
                    "id"
                ],
                "properties": {
                    "apartments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "raiseUpId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Reject\\RejectApartmentCommand": {
                "required": [
                    "id"
                ]
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Statistic\\Add\\AddStatisticCommand": {
                "required": [
                    "age",
                    "sex",
                    "relationships",
                    "views",
                    "discount",
                    "price",
                    "commission"
                ],
                "properties": {
                    "age": {
                        "type": "integer"
                    },
                    "sex": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ]
                    },
                    "relationships": {
                        "type": "string"
                    },
                    "views": {
                        "type": "integer"
                    },
                    "discount": {},
                    "price": {},
                    "commission": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\TakePhone\\TakePhoneApartmentCommand": {
                "required": [
                    "apartmentId",
                    "token"
                ]
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\ToPending\\ToPendingApartmentCommand": {
                "required": [
                    "id",
                    "userId",
                    "userType",
                    "apartmentType",
                    "operationType",
                    "apartmentCategory"
                ],
                "properties": {
                    "userType": {
                        "type": "string",
                        "enum": [
                            "private-person",
                            "private-realtor",
                            "agency-realtor",
                            "company-spokesman",
                            "developer"
                        ]
                    },
                    "apartmentType": {
                        "type": "string",
                        "enum": [
                            "house",
                            "apartment",
                            "business",
                            "land"
                        ]
                    },
                    "apartmentCategory": {
                        "type": "string",
                        "enum": [
                            "new",
                            "secondary"
                        ]
                    },
                    "operationType": {
                        "type": "string",
                        "enum": [
                            "selling",
                            "rent-out",
                            "daily"
                        ]
                    },
                    "residentialComplexId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "a522ee03-c2d1-497d-a6b3-8f2e66f877c2",
                        "nullable": true
                    },
                    "classId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "priceDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\PriceDto"
                    },
                    "generalParamsDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\GeneralParamsDto"
                    },
                    "statusDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\StatusDto"
                    },
                    "addressDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\AddressDto"
                    },
                    "alterAddress": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\AlterAddressDto"
                    },
                    "extraDataDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\ExtraDataDto"
                    },
                    "extraMarkerDto": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\Dto\\ExtraMarkerDto"
                    },
                    "stations": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "transportType": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "distance": {
                                    "type": "string"
                                },
                                "metroId": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "toggles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "apartmentTypeSubcategoryId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "propertyId": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\UnBooked\\UnBookedApartmentCommand": {
                "required": [
                    "apartmentIds",
                    "userId"
                ],
                "properties": {
                    "apartmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\UnFavorite\\UnFavoriteApartmentCommand": {
                "required": [
                    "apartmentIds",
                    "userId"
                ],
                "properties": {
                    "apartmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\UnPublish\\UnPublishApartmentCommand": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Apartment\\View\\ViewApartmentCommand": {
                "required": [
                    "apartmentId",
                    "token"
                ]
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\ComplexDetail\\ComplexDetailCommand": {
                "required": [
                    "complexId"
                ],
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "complexId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Create\\CreateResidentialComplexCommand": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "info": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Dto\\InfoDto"
                    },
                    "about": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "16db97c5-c378-48d9-96c7-4c412955c014",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "string",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "string",
                        "nullable": true
                    },
                    "infrastructures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Delete\\DeleteResidentialComplexCommand": {},
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Document\\Create\\CreateDocumentResidentialComplexCommand": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "stead",
                            "stead-cadastral-number",
                            "building-right-land-works",
                            "building-consequence-class",
                            "members-general-contractor",
                            "members-customer",
                            "members-cadastral-number",
                            "commissioning",
                            "pre-trial-proceedings",
                            "passport-object",
                            "financing-schemes",
                            "comments-lawyers"
                        ]
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "nullable": true
                    },
                    "image": {
                        "description": "base64 or null",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Dto\\InfoDto": {
                "properties": {
                    "class": {
                        "type": "string"
                    },
                    "houses": {
                        "type": "integer"
                    },
                    "housesAccept": {
                        "type": "integer"
                    },
                    "heating": {
                        "type": "string"
                    },
                    "height": {
                        "type": "string"
                    },
                    "floors": {
                        "type": "integer"
                    },
                    "apartments": {
                        "type": "integer"
                    },
                    "constructionTechnology": {
                        "type": "string"
                    },
                    "parking ": {
                        "type": "string"
                    },
                    "walls ": {
                        "type": "string"
                    },
                    "state ": {
                        "type": "string"
                    },
                    "insulation ": {
                        "type": "string"
                    },
                    "territory ": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Edit\\EditResidentialComplexCommand": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "info": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Dto\\InfoDto"
                    },
                    "about": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "16db97c5-c378-48d9-96c7-4c412955c014",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "string",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "string",
                        "nullable": true
                    },
                    "infrastructures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Favorite\\FavoriteComplexCommand": {
                "required": [
                    "complexIds",
                    "userId"
                ],
                "properties": {
                    "complexIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Image\\Create\\CreateImageResidentialComplexCommand": {
                "properties": {
                    "image": {
                        "description": "base64 or null",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\Create\\CreateInfrastructureCommand": {
                "required": [
                    "id",
                    "name",
                    "infrastructureCategoryId",
                    "countryId",
                    "divisionId",
                    "cityId",
                    "streetId"
                ],
                "properties": {
                    "infrastructureCategoryId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "countryId": {
                        "type": "string"
                    },
                    "divisionId": {
                        "type": "string"
                    },
                    "cityId": {
                        "type": "string"
                    },
                    "streetId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "type": "string",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "string",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\Delete\\DeleteInfrastructureCommand": {
                "required": [
                    "id"
                ]
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\Edit\\EditInfrastructureCommand": {
                "required": [
                    "id",
                    "name",
                    "infrastructureCategoryId",
                    "countryId",
                    "divisionId",
                    "cityId",
                    "streetId"
                ],
                "properties": {
                    "infrastructureCategoryId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "countryId": {
                        "type": "string"
                    },
                    "divisionId": {
                        "type": "string"
                    },
                    "cityId": {
                        "type": "string"
                    },
                    "streetId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "type": "string",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\Image\\Create\\CreateImageInfrastructureCommand": {
                "properties": {
                    "image": {
                        "description": "base64 or null",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "main",
                            "additional"
                        ]
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Plan\\PriceHistory\\Create\\PriceHistoryCommand": {
                "required": [
                    "complexPlanId",
                    "currencyId",
                    "price"
                ],
                "properties": {
                    "complexPlanId": {
                        "type": "uuid"
                    },
                    "currencyId": {
                        "type": "uuid"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "quarter": {
                        "type": "integer"
                    },
                    "year": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\UnFavorite\\UnFavoriteComplexCommand": {
                "required": [
                    "complexIds",
                    "userId"
                ],
                "properties": {
                    "complexIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Visit\\Create\\ComplexVisitCommand": {
                "required": [
                    "complexId",
                    "visitReasonId",
                    "contact",
                    "visitDate"
                ],
                "properties": {
                    "complexId": {
                        "type": "uuid"
                    },
                    "visitReasonId": {
                        "type": "uuid"
                    },
                    "visitDate": {
                        "type": "string",
                        "example": "2022-02-24"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/App\\Commands\\Catalog\\Company\\ResidentialComplex\\Visit\\Dto\\ContactDto"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Company\\ResidentialComplex\\Visit\\Dto\\ContactDto": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "email"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "phonePriority": {
                        "type": "string",
                        "enum": [
                            "phone",
                            "viber",
                            "telegram"
                        ]
                    },
                    "comment": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Metro\\Import\\ImportMetroCommand": {
                "required": [
                    "cityId",
                    "data"
                ],
                "properties": {
                    "cityId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "f85df165-cf08-4eec-b4e5-be24635511ef"
                    },
                    "data": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Street\\Import\\ImportStreetCommand": {
                "required": [
                    "cityId"
                ],
                "properties": {
                    "cityId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "f85df165-cf08-4eec-b4e5-be24635511ef"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Catalog\\Street\\ImportFromFile\\ImportStreetCommand": {
                "required": [
                    "cityId"
                ],
                "properties": {
                    "cityId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "f85df165-cf08-4eec-b4e5-be24635511ef"
                    },
                    "file": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Notary\\Create\\CreateNotaryCommand": {
                "required": [
                    "name",
                    "lastName",
                    "company",
                    "phone",
                    "email",
                    "streetId",
                    "building",
                    "lat",
                    "lon",
                    "image"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "additionalPhones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "image": {
                        "description": "base64",
                        "type": "string"
                    },
                    "streetId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "building": {
                        "type": "string"
                    },
                    "addressNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "lat": {
                        "type": "number",
                        "format": "float"
                    },
                    "lon": {
                        "type": "number",
                        "format": "float"
                    },
                    "districtId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workSchedule": {
                        "type": "string",
                        "nullable": true
                    },
                    "patronymic": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\Promo\\Redeem\\RedeemCodeCommand": {
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\AppartmentSubscription\\Create\\CreateSubscriptionCommand": {
                "required": [
                    "apartmentType",
                    "apartmentCategory",
                    "operationType"
                ],
                "properties": {
                    "apartmentType": {
                        "type": "string",
                        "enum": [
                            "house",
                            "apartment",
                            "business",
                            "land"
                        ]
                    },
                    "apartmentCategory": {
                        "type": "string",
                        "enum": [
                            "new",
                            "secondary"
                        ]
                    },
                    "operationType": {
                        "type": "string",
                        "enum": [
                            "selling",
                            "rent-out"
                        ]
                    },
                    "divisionId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "cityId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "streetId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\AppartmentSubscription\\Edit\\EditSubscriptionCommand": {
                "required": [
                    "apartmentType",
                    "apartmentCategory",
                    "operationType"
                ],
                "properties": {
                    "apartmentType": {
                        "type": "string",
                        "enum": [
                            "house",
                            "apartment",
                            "business",
                            "land"
                        ]
                    },
                    "apartmentCategory": {
                        "type": "string",
                        "enum": [
                            "new",
                            "secondary"
                        ]
                    },
                    "operationType": {
                        "type": "string",
                        "enum": [
                            "selling",
                            "rent-out"
                        ]
                    },
                    "divisionId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "cityId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "streetId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Bonus\\CompleteProfile\\CompleteProfileBonusCommand": {
                "required": [
                    "userId"
                ]
            },
            "App\\Commands\\User\\BuyCharityTicket\\BuyCharityTicketCommand": {
                "properties": {
                    "count": {
                        "description": "Count of tickets",
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\BuyRuffleTicket\\BuyRuffleTicketCommand": {
                "properties": {
                    "count": {
                        "description": "Count of tickets",
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\ChangeAvatar\\ChangeUserAvatarCommand": {
                "properties": {
                    "image": {
                        "description": "base64 or null",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Confirmation\\EmailConfirm\\EmailConfirmCommand": {
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Confirmation\\EmailConfirmRequest\\EmailConfirmRequestCommand": {},
            "App\\Commands\\User\\Confirmation\\PhoneConfirm\\PhoneConfirmCommand": {
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Confirmation\\PhoneConfirmRequest\\PhoneConfirmRequestCommand": {},
            "App\\Commands\\User\\Confirmation\\ValidateCode\\ValidateCodeCommand": {
                "required": [
                    "typeId",
                    "file"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\CreateFeedbackMessage\\UserCreateFeedbackMessageCommand": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "string"
                    },
                    "email": {
                        "description": "required without phone",
                        "type": "string",
                        "format": "string",
                        "nullable": true
                    },
                    "phone": {
                        "description": "required without email",
                        "type": "string",
                        "format": "string",
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "format": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Delete\\DeleteUserCommand": {
                "properties": {
                    "reason": {
                        "type": "string",
                        "nullable": true
                    },
                    "reasonId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Dialogue\\Archive\\ArchiveDialogueCommand": {
                "required": [],
                "properties": {
                    "dialogueIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Dialogue\\Create\\CreateDialogueCommand": {
                "required": [
                    "id",
                    "apartmentId",
                    "userId"
                ]
            },
            "App\\Commands\\User\\Dialogue\\Marker\\MarkerDialogueCommand": {
                "required": [],
                "properties": {
                    "dialogueIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Dialogue\\UnArchive\\UnArchiveDialogueCommand": {
                "required": [],
                "properties": {
                    "dialogueIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Dialogue\\UnMarker\\UnMarkerDialogueCommand": {
                "required": [],
                "properties": {
                    "dialogueIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Documents\\Create\\CreateUserDocumentCommand": {
                "required": [
                    "typeId",
                    "file"
                ],
                "properties": {
                    "typeId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "file": {
                        "type": "binary"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Edit\\ChangePassword\\ChangePasswordCommand": {
                "properties": {
                    "oldPassword": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string"
                    },
                    "newPasswordConfirm": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Edit\\Edit\\UserEditCommand": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string",
                        "nullable": true
                    },
                    "birthday": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyId": {
                        "type": "string",
                        "nullable": true
                    },
                    "sex": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ]
                    },
                    "additionalPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "privateType": {
                        "type": "string",
                        "enum": [
                            "private-person",
                            "private-realtor"
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Edit\\EditEmail\\EditEmailConfirm\\ConfirmEditEmailCommand": {
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Edit\\EditEmail\\EditEmailRequest\\EditEmailRequestCommand": {
                "properties": {
                    "email": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Edit\\EditPhone\\EditPhoneConfirm\\ConfirmEditPhoneCommand": {
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Edit\\EditPhone\\EditPhoneRequest\\EditPhoneRequestCommand": {
                "properties": {
                    "phone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\EditSocialUsers\\EditSocialUsersCommand": {
                "required": [
                    "provider"
                ],
                "properties": {
                    "provider": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\ExtendLimits\\ExtendLimitsCommand": {
                "required": [
                    "count"
                ],
                "properties": {
                    "exchangeLimitId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Message\\Claim\\ClaimMessageCommand": {
                "properties": {
                    "reason": {
                        "type": "string",
                        "nullable": true
                    },
                    "reasonId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Message\\Create\\CreateUserMessageCommand": {
                "required": [
                    "id",
                    "dialogueId",
                    "userIdFrom",
                    "userIdTo",
                    "data"
                ],
                "properties": {
                    "data": {
                        "type": "string",
                        "format": "string"
                    },
                    "hasFile": {
                        "type": "boolean",
                        "format": "bool",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Message\\Edit\\EditUserMessageCommand": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Message\\File\\Create\\CreateFileMessageCommand": {
                "required": [
                    "id",
                    "messageId",
                    "file",
                    "type",
                    "originalName"
                ],
                "properties": {
                    "file": {
                        "description": "base64",
                        "type": "string"
                    },
                    "type": {
                        "description": "MimeType",
                        "type": "string"
                    },
                    "originalName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Message\\Viewed\\ViewedMessageCommand": {
                "required": [],
                "properties": {
                    "messageIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Order\\BulkDelete\\BulkDeleteOrderCommand": {
                "required": [
                    "orderIds"
                ],
                "properties": {
                    "orderIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Order\\BuyPointsByLiqPay\\BuyPointsByLiqPayCommand": {
                "required": [
                    "count",
                    "type"
                ],
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Order\\Create\\CreateOrderCommand": {
                "required": [
                    "provider",
                    "socialId"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App\\Commands\\User\\Order\\Create\\ItemDTO"
                        },
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Order\\Create\\ItemDTO": {
                "required": [
                    "count",
                    "type"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "golden_point",
                            "silver_point"
                        ]
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\PointsExchange\\PointsExchangeCommand": {
                "required": [
                    "count"
                ],
                "properties": {
                    "count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Register\\UserRegisterCommand": {
                "required": [
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\ResetPassword\\ResetPasswordCommand": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\ResetPasswordConfirm\\ResetPasswordConfirmCommand": {
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "confirmPassword": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Subscription\\create\\CreateSubscriptionCommand": {},
            "App\\Commands\\User\\Subscription\\edit\\EditUserSubscriptionCommand": {
                "properties": {
                    "rooms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App\\Commands\\User\\Subscription\\edit\\RoomDTO"
                        },
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "App\\Commands\\User\\Subscription\\edit\\RoomDTO": {
                "properties": {
                    "type": {
                        "description": "Name subscription",
                        "type": "string",
                        "enum": [
                            "raffle",
                            "advice_blog",
                            "ticket_buying",
                            "charity",
                            "transaction",
                            "apartment"
                        ]
                    },
                    "mobile": {
                        "type": "boolean"
                    },
                    "mail": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "BlogCategoryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "seo_parameters": {
                        "$ref": "#/components/schemas/SeoParameterResource"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Blog\\BlogImageResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "type": "object"
            },
            "BlogResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "category_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "category": {
                        "$ref": "#/components/schemas/BlogCategoryResource"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "seo_parameters": {
                        "$ref": "#/components/schemas/SeoParameterResource"
                    },
                    "images": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Blog\\BlogImageResource"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ActualizePriceResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "count": {
                        "type": "integer"
                    },
                    "type": {
                        "enum": [
                            "money",
                            "points"
                        ]
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Agency\\AgencyCallResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "apartment": {
                        "$ref": "#/components/schemas/ApartmentResource"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Agency\\AgencyContactResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "contact": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AgencyImageResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Agency\\AgencyResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "bossName": {
                        "type": "string"
                    },
                    "bossSurName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "site": {
                        "type": "string"
                    },
                    "logo": {
                        "type": "string",
                        "format": "uri"
                    },
                    "street": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\StreetResource"
                    },
                    "district": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityDistrictResource"
                    },
                    "houseNumber": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "string"
                    },
                    "lon": {
                        "type": "string"
                    },
                    "addressNumber": {
                        "type": "string"
                    },
                    "images": {
                        "$ref": "#/components/schemas/AgencyImageResponse"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "payed_at": {
                        "type": "string",
                        "format": "Y-m-d"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "additionalPhones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentAdditionalResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentBathroomResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentClassResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentComfortResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentContactResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "contact": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentDictionaryRaiseActualizeResource": {
                "properties": {
                    "raisesPrices": {
                        "properties": {
                            "byMoney": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\RaisePriceResource"
                            },
                            "byPoints": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\RaisePriceResource"
                            }
                        },
                        "type": "object"
                    },
                    "actualizationPrices": {
                        "properties": {
                            "byMoney": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ActualizePriceResource"
                            },
                            "byPoints": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ActualizePriceResource"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ApartmentDictionaryResource": {
                "properties": {
                    "userType": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userPosition": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationType": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apartmentCategory": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apartmentType": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apartmentTypeSubcategory": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentSubcategoryResource"
                    },
                    "apartmentStationType": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apartmentCoastCalculation": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentStatusResource"
                    },
                    "class": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentClassResource"
                    },
                    "commission": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "extraData": {
                        "properties": {
                            "wall": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentWallResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "overlap": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentOverlapResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "parking": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentParkingResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "heating": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentHeatingResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "repair": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentRepairResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "flooring": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentFlooringResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "security": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentSecurityResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "wallInsulation": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentInsulationResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "roof": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentRoofResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "bathroom": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentBathroomResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "machines": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentMachineResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "comforts": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentComfortResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "multimedias": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentMultimediaResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "landscapes": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentLandscapeResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "additionals": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentAdditionalResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "communications": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CommunicationResource"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "landBuildings": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "select"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\LandBuildingResource"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "imageType": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sort": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "raisesPrices": {
                        "properties": {
                            "byMoney": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\RaisePriceResource"
                            },
                            "byPoints": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\RaisePriceResource"
                            }
                        },
                        "type": "object"
                    },
                    "actualizationPrices": {
                        "properties": {
                            "byMoney": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ActualizePriceResource"
                            },
                            "byPoints": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ActualizePriceResource"
                            }
                        },
                        "type": "object"
                    },
                    "claimReasons": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ClaimReasonApartmentResource"
                    },
                    "toggles": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ToggleResource"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\PropertyResource"
                    },
                    "deActivateReasons": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "selects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\SelectResource"
                        }
                    },
                    "planTypes": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexImage\\PlanTypeResource"
                    },
                    "infrastructureCategory": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\InfrastrucCategoryResource"
                    },
                    "complexVisitReasons": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\VisitReason\\ComplexVisitReasonResource"
                    },
                    "complexVisitContactPriority": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apartmentEditReasons": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "reasonKey": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "complexTechnology": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ComplexTechnology\\ComplexTechnologyResource"
                    },
                    "complexTerritory": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Territory\\ComplexTerritoryResource"
                    }
                },
                "type": "object"
            },
            "ApartmentDictionaryStatisticsResource": {
                "properties": {
                    "minPrice": {
                        "type": "number",
                        "format": "float"
                    },
                    "maxPrice": {
                        "type": "number",
                        "format": "float"
                    },
                    "minBuildingNumber": {
                        "type": "string"
                    },
                    "maxBuildingNumber": {
                        "type": "string"
                    },
                    "maxArea": {
                        "type": "integer"
                    },
                    "maxAreaKitchen": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentFlooringResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentHeatingResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApartmentImageResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentInsulationResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentLandscapeResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentMachineResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentMultimediaResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentOverlapResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentParkingResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentRepairResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApartmentResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "visibleId": {
                        "type": "integer"
                    },
                    "announcementStatus": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "translation": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "userType": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "translation": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "apartmentType": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "translation": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "apartmentTypeSubcategory": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentSubcategoryResource"
                    },
                    "apartmentCategory": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "translation": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "apartmentOperation": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "translation": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "constructionStatus": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentStatusResource"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Currency\\CurrencyResource"
                    },
                    "isReady": {
                        "type": "boolean",
                        "example": true
                    },
                    "readyYear": {
                        "type": "integer",
                        "example": 2022
                    },
                    "apartmentCoastCalculation": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "translation": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "landCoastCalculation": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "translation": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "apartmentCommission": {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "translation": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "contacts": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentContactResource"
                    },
                    "agency": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Agency\\AgencyResource"
                    },
                    "street": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\StreetResource"
                    },
                    "alterAddress": {
                        "properties": {
                            "division": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\RegionResource"
                            },
                            "cityName": {
                                "type": "string"
                            },
                            "districtName": {
                                "type": "string"
                            },
                            "streetName": {
                                "type": "string"
                            },
                            "buildingNumber": {
                                "type": "string"
                            },
                            "apartmentNumber": {
                                "type": "string"
                            },
                            "latitude": {
                                "type": "string"
                            },
                            "longitude": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "buildingNumber": {
                        "type": "string"
                    },
                    "apartmentNumber": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "50.566139"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "30.317380"
                    },
                    "stations": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentStationResource"
                    },
                    "room_count": {
                        "type": "integer"
                    },
                    "area": {
                        "type": "number",
                        "format": "float"
                    },
                    "images": {
                        "$ref": "#/components/schemas/ApartmentImageResource"
                    },
                    "thumbnails": {
                        "$ref": "#/components/schemas/ApartmentImageResource"
                    },
                    "description": {
                        "type": "string"
                    },
                    "videUrl": {
                        "type": "string"
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "Y-m-d"
                    },
                    "residentialComplex": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ComplexResource"
                    },
                    "flooring": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentFlooringResource"
                    },
                    "heating": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentHeatingResource"
                    },
                    "overlap": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentOverlapResource"
                    },
                    "parking": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentParkingResource"
                    },
                    "repair": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentRepairResource"
                    },
                    "wall": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentWallResource"
                    },
                    "security": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentSecurityResource"
                    },
                    "wallInsulation": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentInsulationResource"
                    },
                    "roof": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentRoofResource"
                    },
                    "bathroom": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentBathroomResource"
                    },
                    "machines": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentMachineResource"
                    },
                    "comforts": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentComfortResource"
                    },
                    "multimedias": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentMultimediaResource"
                    },
                    "landscapes": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentLandscapeResource"
                    },
                    "additionals": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentAdditionalResource"
                    },
                    "communications": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CommunicationResource"
                    },
                    "landBuildings": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\LandBuildingResource"
                    },
                    "ceilingHeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "areaKitchen": {
                        "type": "number",
                        "format": "float"
                    },
                    "houseType": {
                        "type": "string"
                    },
                    "coastCalculation": {
                        "type": "string"
                    },
                    "commission": {
                        "type": "string"
                    },
                    "lastFloor": {
                        "type": "boolean"
                    },
                    "manyFloor": {
                        "type": "boolean"
                    },
                    "washingMachine": {
                        "type": "boolean"
                    },
                    "furniture": {
                        "type": "boolean"
                    },
                    "ownerMoreThreeYears": {
                        "type": "boolean"
                    },
                    "conditioner": {
                        "type": "boolean"
                    },
                    "finishing": {
                        "type": "boolean"
                    },
                    "householdAppliances": {
                        "type": "boolean"
                    },
                    "raisingUsed": {
                        "type": "integrer"
                    },
                    "raisedTo": {
                        "type": "string",
                        "format": "Y-m-d"
                    },
                    "expiredAt": {
                        "type": "string",
                        "format": "Y-m-d"
                    },
                    "actualization": {
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "current": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "raise": {
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "current": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "inFavorites": {
                        "type": "boolean"
                    },
                    "favoriteCount": {
                        "type": "integer"
                    },
                    "viewCount": {
                        "type": "integer"
                    },
                    "takePhoneCount": {
                        "type": "integer"
                    },
                    "booked": {
                        "type": "boolean"
                    },
                    "bookingUser": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "toggles": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ToggleResource"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\PropertyResource"
                    },
                    "rejectReason": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentRoofResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentSecurityResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentStationResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "transportType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "distance": {
                        "type": "string"
                    },
                    "metro": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\UndergroundResource"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentStatusResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentSubcategoryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "apartmentType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ApartmentWallResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\CityDistrictResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "city": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityResource"
                    },
                    "latitude": {
                        "description": "latitude",
                        "type": "string",
                        "example": "49.799586"
                    },
                    "longitude": {
                        "description": "longitude",
                        "type": "string",
                        "example": "30.118534"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\CityResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "region": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\RegionResource"
                    },
                    "country": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CountryResource"
                    },
                    "undergroundBranches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\UndergroundBranchesResource"
                        },
                        "nullable": true
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\CityUndergroundsResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "city": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityResource"
                    },
                    "branch": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\MetroBranchesResource"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ClaimReasonApartmentResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "reason": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\CommunicationResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\CompanyCallResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "apartment": {
                        "$ref": "#/components/schemas/ApartmentResource"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\CompanyResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "yearFoundation": {
                        "type": "integer"
                    },
                    "about": {
                        "type": "string"
                    },
                    "logo": {
                        "type": "string",
                        "format": "uri"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "socials": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\CompanySocialResource"
                    },
                    "complexes": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ComplexResource"
                    },
                    "houses": {
                        "type": "integer"
                    },
                    "housesAccept": {
                        "type": "integer"
                    },
                    "complexesAcceptCount": {
                        "type": "integer"
                    },
                    "complexesContinueCount": {
                        "type": "integer"
                    },
                    "minYearHousesAccept": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\CompanySocialResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ComplexCompleteHouse\\ComplexCompleteHouseResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "houses": {
                        "type": "string"
                    },
                    "quarter": {
                        "type": "integer"
                    },
                    "year": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ComplexResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "about": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    },
                    "companies": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\CompanyResource"
                    },
                    "street": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\StreetResource"
                    },
                    "info": {
                        "properties": {
                            "class": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentClassResource"
                            },
                            "houses": {
                                "type": "integer"
                            },
                            "acceptedHouses": {
                                "type": "integer"
                            },
                            "housesInProjects": {
                                "type": "integer"
                            },
                            "housesInPrepare": {
                                "type": "integer"
                            },
                            "housesInBuildings": {
                                "type": "integer"
                            },
                            "heating": {
                                "type": "string"
                            },
                            "height": {
                                "type": "string"
                            },
                            "floors": {
                                "type": "integer"
                            },
                            "apartments": {
                                "type": "integer"
                            },
                            "constructionTechnology": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ComplexTechnology\\ComplexTechnologyResource"
                            },
                            "parking": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentParkingResource"
                            },
                            "wall": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentWallResource"
                            },
                            "state": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentRepairResource"
                            },
                            "insulation": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\ApartmentInsulationResource"
                            },
                            "closeTerritories": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Territory\\ComplexTerritoryResource"
                            }
                        },
                        "type": "object"
                    },
                    "hasDocuments": {
                        "properties": {
                            "hasDocuments": {
                                "type": "boolean"
                            },
                            "forConstruction": {
                                "type": "boolean"
                            },
                            "generalContractorLicense": {
                                "type": "boolean"
                            },
                            "generalContractor": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "infrastructures": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\InfrastructureResource"
                    },
                    "images": {
                        "$ref": "#/components/schemas/ResidentialComplexImageResponse"
                    },
                    "imageGroups": {
                        "$ref": "#/components/schemas/ComplexImageGroupResponse"
                    },
                    "documentBlocks": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexDocument\\ComplexDocumentBlockResource"
                    },
                    "complexLooks": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Profitability\\ComplexLookResource"
                    },
                    "stations": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Station\\ComplexStationResource"
                    },
                    "minPrice": {
                        "type": "integer"
                    },
                    "minPriceExpiredAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "minPriceCurrency": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Currency\\CurrencyResource"
                    },
                    "inFavorites": {
                        "type": "boolean"
                    },
                    "lendMonth": {
                        "type": "integer",
                        "example": 29
                    },
                    "firstContribution": {
                        "type": "integer",
                        "example": 50
                    },
                    "lend": {
                        "type": "boolean"
                    },
                    "сommissioning": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ComplexCompleteHouse\\ComplexCompleteHouseResource"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ComplexTechnology\\ComplexTechnologyResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\InfrastrucCategoryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\InfrastructureImageResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string",
                        "format": "uri"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\InfrastructureResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "images": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\InfrastructureImageResource"
                    },
                    "street": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\StreetResource"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri"
                    },
                    "description": {
                        "type": "string"
                    },
                    "category": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\InfrastrucCategoryResource"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Profitability\\ComplexFloorTypeResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "percent": {
                        "type": "integer",
                        "example": 15
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Profitability\\ComplexLookResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "percent": {
                        "type": "integer",
                        "example": 10
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Profitability\\ComplexProfitabilityResource": {
                "properties": {
                    "complexLooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Profitability\\ComplexLookResource"
                        }
                    },
                    "complexFloorTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Profitability\\ComplexFloorTypeResource"
                        }
                    },
                    "statisticAverage": {
                        "type": "number",
                        "format": "0.0",
                        "example": "50.00"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexDocument\\ComplexDocumentBlockResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "documents": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexDocument\\ResidentialComplexDocumentResource"
                    },
                    "tabs": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexDocument\\ResidentialComplexTabResource"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexDocument\\ResidentialComplexDocumentResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "linkType": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string",
                        "format": "uri"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexDocument\\ResidentialComplexTabResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ComplexImageGroupResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "images": {
                        "$ref": "#/components/schemas/ResidentialComplexImageResponse"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexImage\\PlanHistoryQuarterResource": {
                "properties": {
                    "quarter": {
                        "type": "integer"
                    },
                    "year": {
                        "type": "integer"
                    },
                    "beginQuarterDate": {
                        "type": "string",
                        "format": "Y-m-d",
                        "example": "2023-01-01"
                    },
                    "endQuarterDate": {
                        "type": "string",
                        "format": "Y-m-d",
                        "example": "2023-03-31"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexImage\\PlanTypeResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResidentialComplexImageResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexImage\\ResidentialComplexPlanHistoryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexImage\\ResidentialComplexPlaneResource"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Currency\\CurrencyResource"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "Y-m-d"
                    },
                    "currentCurrencyRate": {
                        "type": "number",
                        "format": "float"
                    },
                    "currentUsdRate": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexImage\\ResidentialComplexPlaneResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string",
                        "format": "uri"
                    },
                    "type": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexImage\\PlanTypeResource"
                    },
                    "area": {
                        "type": "number",
                        "format": "float"
                    },
                    "rooms": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Currency\\CurrencyResource"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Station\\ComplexStationResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "transportType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "distance": {
                        "type": "string"
                    },
                    "metro": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\MetroResource"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Territory\\ComplexTerritoryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\VisitReason\\ComplexVisitReasonResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\CountryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\Currency\\CurrencyResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "symbol": {
                        "type": "string"
                    },
                    "rate": {
                        "description": "Rate of currency to Ukrainian Hryvnia",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\LandBuildingResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\MetroBranchesResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "city": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityResource"
                    },
                    "metros": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\MetroResource"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\MetroResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "city": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityResource"
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\PropertyResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "apartmentType": {
                        "type": "string"
                    },
                    "operationType": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "to": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\RaisePriceResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "count": {
                        "type": "integer"
                    },
                    "type": {
                        "enum": [
                            "money",
                            "points"
                        ]
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\RegionResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "country": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CountryResource"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\SelectResource": {
                "properties": {
                    "selectKey": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\SetResource": {
                "properties": {
                    "apartmentType": {
                        "type": "string"
                    },
                    "operationType": {
                        "type": "string"
                    },
                    "selects": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\SelectResource"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\StreetResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "city": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityResource"
                    },
                    "district": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityDistrictResource"
                    },
                    "lat": {
                        "description": "latitude",
                        "type": "string",
                        "example": "49.799586"
                    },
                    "lon": {
                        "description": "longitude",
                        "type": "string",
                        "example": "30.118534"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\ToggleResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "apartmentType": {
                        "type": "string"
                    },
                    "operationType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\UndergroundBranchesResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "city": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityResource"
                    },
                    "undergrounds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\UndergroundResource"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Catalog\\UndergroundResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "city": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityResource"
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CharityMembersResource": {
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "userVisibleId": {
                        "type": "integer"
                    },
                    "userAvatar": {
                        "type": "string",
                        "format": "url"
                    },
                    "charityId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "count": {
                        "type": "integer"
                    },
                    "categoryId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "datetime",
                        "example": "30.11.2022"
                    }
                },
                "type": "object"
            },
            "CharityResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "members_count": {
                        "type": "integer"
                    },
                    "payed": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "apartment": {
                        "$ref": "#/components/schemas/ApartmentResource"
                    },
                    "image_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Charity\\VideoResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Common\\AgencyPriceResource": {
                "properties": {
                    "price": {
                        "type": "integer"
                    },
                    "currencyCode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BonusResource": {
                "properties": {
                    "fillDeActivateApartmentBonus": {
                        "type": "integer"
                    },
                    "fillProfileBonus": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ContactResource": {
                "properties": {
                    "phones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "socials": {
                        "properties": {
                            "fb": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            },
                            "twitter": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            },
                            "youtube": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            },
                            "linkedin": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            },
                            "telegram": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            },
                            "instagram": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "coordinates": {
                        "properties": {
                            "latitude": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                            },
                            "longitude": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "address": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DailyResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "reward": {
                        "type": "integer"
                    },
                    "pointType": {
                        "type": "string"
                    },
                    "days": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DeleteReasonResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "reason": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExchangeLimitResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ExchangeRatePointsResource": {
                "properties": {
                    "silver_to_gold": {
                        "type": "integer",
                        "example": 20
                    },
                    "additional_payment": {
                        "type": "integer",
                        "example": 10
                    }
                },
                "type": "object"
            },
            "ExchangeRateResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Common\\FaqResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "question": {
                        "type": "string"
                    },
                    "answer": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Common\\NotaryPriceResource": {
                "properties": {
                    "price": {
                        "type": "integer"
                    },
                    "currencyCode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Main\\ApartmentTypeResource": {
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "house"
                    },
                    "typeTranslation": {
                        "type": "string",
                        "example": "house"
                    },
                    "count": {
                        "type": "integer",
                        "example": 3456
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Main\\BlocksResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Main\\GeneralResource": {
                "properties": {
                    "apartmentsCount": {
                        "type": "integer",
                        "example": 23145
                    },
                    "inRaffleCount": {
                        "type": "integer",
                        "example": 24
                    },
                    "priceCharity": {
                        "type": "integer",
                        "example": 1052430
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\Main\\RealtyResource": {
                "properties": {
                    "typesCount": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Main\\ApartmentTypeResource"
                    },
                    "topComplexes": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ComplexResource"
                    }
                },
                "type": "object"
            },
            "NotaryMapResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "lat": {
                        "type": "number",
                        "format": "float"
                    },
                    "lon": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "NotaryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "patronymic": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "additionalPhones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "building": {
                        "type": "string"
                    },
                    "addressNumber": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "float"
                    },
                    "lon": {
                        "type": "number",
                        "format": "float"
                    },
                    "street": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\StreetResource"
                    },
                    "district": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityDistrictResource"
                    },
                    "workSchedule": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PageResource": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string",
                        "enum": [
                            "about-us",
                            "contacts",
                            "home",
                            "realty",
                            "catalog",
                            "draw",
                            "charity",
                            "result",
                            "apartments",
                            "apartment-daily",
                            "apartment-sale",
                            "apartment-rent",
                            "policy",
                            "raffle_policy"
                        ]
                    },
                    "seo_parameters": {
                        "$ref": "#/components/schemas/SeoParameterResource"
                    },
                    "without_content": {
                        "type": "boolean"
                    },
                    "title_h1": {
                        "type": "string",
                        "nullable": true
                    },
                    "short_description": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "RaffleCategoryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "price_from": {
                        "type": "integer"
                    },
                    "price_to": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RaffleInfoResource": {
                "properties": {
                    "finished": {
                        "type": "integer"
                    },
                    "membersCount": {
                        "type": "integer"
                    },
                    "priceRaffle": {
                        "type": "integer"
                    },
                    "priceCharity": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RaffleMembershipResource": {
                "properties": {
                    "id": {
                        "description": "raffle ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RaffleTicketResource"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RaffleResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "members_count": {
                        "type": "integer"
                    },
                    "payed": {
                        "type": "integer"
                    },
                    "number": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "videos": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "winner": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "apartment": {
                        "$ref": "#/components/schemas/ApartmentResource"
                    },
                    "image_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RaffleTicketHistoryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "userId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "userVisibleId": {
                        "type": "integer"
                    },
                    "userAvatar": {
                        "type": "string",
                        "format": "url"
                    },
                    "raffleId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "count": {
                        "type": "integer"
                    },
                    "categoryId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "datetime",
                        "example": "30.11.2022"
                    },
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RaffleTicketResource"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RaffleTicketResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "userId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "raffleId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "ticketNumber": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "datetime",
                        "example": "30.11.2022"
                    }
                },
                "type": "object"
            },
            "SeoParameterResource": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "meta_title": {
                        "type": "string"
                    },
                    "meta_description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TaskResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "text": {
                        "type": "string"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "currencyType": {
                        "type": "string"
                    },
                    "object_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "YouTubeLike",
                            "YouTubeSubscription"
                        ]
                    }
                },
                "type": "object"
            },
            "UserTaskResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "text": {
                        "type": "string"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "currencyType": {
                        "type": "string"
                    },
                    "objectUrl": {
                        "type": "string",
                        "format": "uri"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "YouTubeLike",
                            "YouTubeSubscription"
                        ]
                    },
                    "isCompleted": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AchievementResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "currencyType": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "reward": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\User\\ApartmentSubscriptionResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "apartmentTypeKey": {
                        "type": "string"
                    },
                    "apartmentType": {
                        "type": "string"
                    },
                    "operationTypeKey": {
                        "type": "string"
                    },
                    "operationType": {
                        "type": "string"
                    },
                    "apartmentCategoryKey": {
                        "type": "string"
                    },
                    "apartmentCategory": {
                        "type": "string"
                    },
                    "division": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\RegionResource"
                    },
                    "city": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\CityResource"
                    },
                    "street": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\StreetResource"
                    }
                },
                "type": "object"
            },
            "DialogueResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "apartment": {
                        "$ref": "#/components/schemas/ApartmentResource"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "isMarker": {
                        "type": "boolean"
                    },
                    "isArchive": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date"
                    },
                    "unViewed": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "DocumentGroupResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentTypeResource"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "DocumentResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "typeId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "groupId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "file": {
                        "type": "string",
                        "format": "uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "DocumentTypeResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ClaimDictionaryResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "reason": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MessageImageResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string"
                    },
                    "originalName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "MessageResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "data": {
                        "type": "object"
                    },
                    "userFrom": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "userTo": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "viewed": {
                        "type": "string",
                        "format": "date"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date"
                    },
                    "images": {
                        "$ref": "#/components/schemas/MessageImageResource"
                    },
                    "hasFile": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "NotificationResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "data": {
                        "type": "object"
                    },
                    "chanel": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OrderItemResource": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "golden_point",
                            "silver_point"
                        ]
                    },
                    "count": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "OrderResource": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "number": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "number",
                        "format": "float"
                    },
                    "isPayed": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paymentStatus": {
                        "type": "string"
                    },
                    "paymentProvider": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemResource"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SocialUserResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "social_id": {
                        "type": "string"
                    },
                    "provider": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SubscriptionResource": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "room": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "typeKey": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "text": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "mobile": {
                        "type": "boolean"
                    },
                    "mail": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "TransactionResource": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "transaction": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "UserAchievementResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string",
                        "enum": [
                            "documents",
                            "rebirth"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "currencyType": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "reward": {
                        "type": "integer"
                    },
                    "isCompleted": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "visibleId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "sex": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "additionalPhone": {
                        "type": "string"
                    },
                    "birthday": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "avatarUrl": {
                        "type": "string",
                        "format": "uri"
                    },
                    "exchangeLimit": {
                        "type": "integer"
                    },
                    "exchangeLimitUsed": {
                        "type": "integer"
                    },
                    "completedTasks": {
                        "type": "integer"
                    },
                    "pointsFarmed": {
                        "type": "integer"
                    },
                    "tasksUncompleted": {
                        "type": "integer"
                    },
                    "emailConfirmed": {
                        "type": "boolean"
                    },
                    "phoneConfirmed": {
                        "type": "boolean"
                    },
                    "termsOfUseAccepted": {
                        "type": "boolean"
                    },
                    "isInstructed": {
                        "type": "boolean"
                    },
                    "visitedAt": {
                        "type": "string"
                    },
                    "visitedInRow": {
                        "type": "integer"
                    },
                    "rewardClaimed": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "manager",
                            "user"
                        ]
                    },
                    "youtubeTokensExpiredAt": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    },
                    "unpaidOrders": {
                        "type": "integer",
                        "nullable": true
                    },
                    "balance": {
                        "$ref": "#/components/schemas/WalletResource"
                    },
                    "socials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SocialUserResource"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "draftApartmentCount": {
                        "type": "integer"
                    },
                    "pendingApartmentCount": {
                        "type": "integer"
                    },
                    "publishedApartmentCount": {
                        "type": "integer"
                    },
                    "moderationApartmentCount": {
                        "type": "integer"
                    },
                    "rejectedApartmentCount": {
                        "type": "integer"
                    },
                    "archivedApartmentCount": {
                        "type": "integer"
                    },
                    "developerApartmentCount": {
                        "type": "integer"
                    },
                    "favoriteApartmentCount": {
                        "type": "integer"
                    },
                    "favoriteDeveloperApartmentCount": {
                        "type": "integer"
                    },
                    "favoriteAgencyApartmentCount": {
                        "type": "integer"
                    },
                    "favoriteComplexCount": {
                        "type": "integer"
                    },
                    "inApartmentDialogueCount": {
                        "type": "integer"
                    },
                    "outApartmentDialogueCount": {
                        "type": "integer"
                    },
                    "markerApartmentDialogueCount": {
                        "type": "integer"
                    },
                    "archiveApartmentDialogueCount": {
                        "type": "integer"
                    },
                    "unViewedInDialogueCount": {
                        "type": "integer"
                    },
                    "unViewedOutDialogueCount": {
                        "type": "integer"
                    },
                    "unViewedMarkerDialogueCount": {
                        "type": "integer"
                    },
                    "unViewedArchiveDialogueCount": {
                        "type": "integer"
                    },
                    "achievementCount": {
                        "type": "integer"
                    },
                    "company": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\CompanyResource"
                    },
                    "companyManageType": {
                        "type": "string",
                        "enum": [
                            "manager",
                            "director"
                        ]
                    },
                    "companyManageTypeTranslate": {
                        "type": "string"
                    },
                    "agency": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Agency\\AgencyResource"
                    },
                    "agencyManageType": {
                        "type": "string",
                        "enum": [
                            "head",
                            "realtor"
                        ]
                    },
                    "agencyManageTypeTranslate": {
                        "type": "string"
                    },
                    "privateType": {
                        "type": "string",
                        "enum": [
                            "private-realtor",
                            "private-person"
                        ]
                    },
                    "privateTypeTranslate": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "App\\Http\\Resources\\User\\UserShortResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "visibleId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "sex": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "avatarUrl": {
                        "type": "string",
                        "format": "uri"
                    },
                    "additionalPhone": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date"
                    },
                    "company": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\CompanyResource"
                    },
                    "companyManageType": {
                        "type": "string",
                        "enum": [
                            "manager",
                            "director"
                        ]
                    },
                    "companyManageTypeTranslate": {
                        "type": "string"
                    },
                    "agency": {
                        "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Agency\\AgencyResource"
                    },
                    "agencyManageType": {
                        "type": "string",
                        "enum": [
                            "head",
                            "realtor"
                        ]
                    },
                    "agencyManageTypeTranslate": {
                        "type": "string"
                    },
                    "privateType": {
                        "type": "string",
                        "enum": [
                            "private-realtor",
                            "private-person"
                        ]
                    },
                    "privateTypeTranslate": {
                        "type": "string"
                    },
                    "visitedAt": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "WalletResource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "silverPoints": {
                        "type": "number",
                        "format": "float"
                    },
                    "goldPoints": {
                        "type": "number",
                        "format": "float"
                    },
                    "cash": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "BlogPaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/BlogResource"
                            }
                        }
                    }
                ]
            },
            "AgencyCallPaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Agency\\AgencyCallResource"
                            }
                        }
                    }
                ]
            },
            "AgencyPaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Agency\\AgencyResource"
                            }
                        }
                    }
                ]
            },
            "ApartmentPaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/ApartmentResource"
                            }
                        }
                    }
                ]
            },
            "CompanyPaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\CompanyResource"
                            }
                        }
                    }
                ]
            },
            "App\\OpenApi\\V1\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\ResidentialComplexInfrastructurePaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\Infrastructure\\InfrastructureResource"
                            }
                        }
                    }
                ]
            },
            "ResidentialComplexPlanPaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ResidentialComplexImage\\ResidentialComplexPlaneResource"
                            }
                        }
                    }
                ]
            },
            "ResidentialComplexPaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Company\\ResidentialComplex\\ComplexResource"
                            }
                        }
                    }
                ]
            },
            "CurrencyPaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Catalog\\Currency\\CurrencyResource"
                            }
                        }
                    }
                ]
            },
            "FaqPaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/App\\Http\\Resources\\Common\\FaqResource"
                            }
                        }
                    }
                ]
            },
            "DialoguePaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/DialogueResource"
                            }
                        }
                    }
                ]
            },
            "JWTTokenResponse": {
                "properties": {
                    "tokenType": {
                        "type": "string"
                    },
                    "expiresIn": {
                        "type": "string"
                    },
                    "accessToken": {
                        "type": "string"
                    },
                    "refreshToken": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MessagePaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/MessageResource"
                            }
                        }
                    }
                ]
            },
            "NotaryPaginationSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/NotaryResource"
                                }
                            }
                        }
                    }
                ]
            },
            "AccessTokenRequest": {
                "required": [
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "rememberMe": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "RefreshTokenRequest": {
                "required": [
                    "refreshToken"
                ],
                "properties": {
                    "refreshToken": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TokenResponse": {
                "properties": {
                    "tokenType": {
                        "type": "string"
                    },
                    "expiresIn": {
                        "type": "string"
                    },
                    "accessToken": {
                        "type": "string"
                    },
                    "refreshToken": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OrderPaginateSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/OrderResource"
                            }
                        }
                    }
                ]
            },
            "Pagination": {
                "properties": {
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer"
                            },
                            "from": {
                                "type": "integer"
                            },
                            "last_page": {
                                "type": "integer"
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true
                                        },
                                        "label": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string",
                                "format": "uri"
                            },
                            "per_page": {
                                "type": "integer"
                            },
                            "to": {
                                "type": "integer"
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "format": "uri"
                            },
                            "last": {
                                "type": "string",
                                "format": "uri"
                            },
                            "prev": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CharityMembersPaginatedSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/CharityMembersResource"
                            },
                            "userCount": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            },
            "RaffleTicketHistoryPaginatedSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/RaffleTicketHistoryResource"
                            },
                            "userCount": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            },
            "TaskPaginatedSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/TaskResource"
                            }
                        }
                    }
                ]
            },
            "UserTaskPaginatedSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/UserTaskResource"
                            }
                        }
                    }
                ]
            },
            "TransactionPaginateSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/TransactionResource"
                            }
                        }
                    }
                ]
            },
            "NotificationPaginatedSchema": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/NotificationResource"
                            }
                        }
                    }
                ]
            },
            "apartment": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "published",
                            "rejected"
                        ]
                    },
                    "roomName": {
                        "type": "string",
                        "example": "apartment"
                    },
                    "apartmentId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "apartmentExpiredAt": {
                        "type": "string",
                        "format": "Y-m-d H:s:i"
                    },
                    "apartmentPublishedAt": {
                        "type": "string",
                        "format": "Y-m-d H:s:i"
                    },
                    "visibleId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "advice_blog": {
                "properties": {
                    "roomName": {
                        "type": "string",
                        "example": "advice_blog"
                    },
                    "blogId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "messages": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "message",
                            "file",
                            "viewed"
                        ]
                    },
                    "roomName": {
                        "type": "string",
                        "example": "messages"
                    },
                    "message": {
                        "$ref": "#/components/schemas/MessageResource"
                    },
                    "file": {
                        "$ref": "#/components/schemas/MessageImageResource"
                    },
                    "viewed": {
                        "type": "string",
                        "format": "Y-m-d"
                    }
                },
                "type": "object"
            },
            "prices": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "change"
                        ]
                    },
                    "roomName": {
                        "type": "string",
                        "example": "prices"
                    },
                    "visibleId": {
                        "type": "integer",
                        "example": 1
                    },
                    "apartmentId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "raffle": {
                "properties": {
                    "roomName": {
                        "type": "string",
                        "example": "raffle"
                    },
                    "raffleId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "transaction": {
                "properties": {
                    "roomName": {
                        "type": "string",
                        "example": "transaction"
                    },
                    "transaction": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "success",
                            "failed"
                        ]
                    }
                },
                "type": "object"
            },
            "App\\OpenApi\\V1\\Websocket\\ConnectionResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "channels": {
                        "type": "object",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/advice_blog"
                            },
                            {
                                "$ref": "#/components/schemas/raffle"
                            },
                            {
                                "$ref": "#/components/schemas/transaction"
                            },
                            {
                                "$ref": "#/components/schemas/apartment"
                            },
                            {
                                "$ref": "#/components/schemas/messages"
                            },
                            {
                                "$ref": "#/components/schemas/prices"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "oauth2",
                "description": "Authorization: Bearer {access-token}",
                "in": "header",
                "flows": {
                    "password": {
                        "tokenUrl": "http://api.localhost/api/v1/oauth/token",
                        "refreshUrl": "http://api.localhost/api/v1/oauth/token/refresh",
                        "scopes": {}
                    }
                },
                "bearerFormat": "JWT",
                "scheme": "Bearer"
            }
        }
    },
    "tags": [
        {
            "name": "OAuth",
            "description": "Methods for oauth."
        },
        {
            "name": "JWT",
            "description": "Methods for jwt auth."
        },
        {
            "name": "User"
        },
        {
            "name": "User.Current"
        },
        {
            "name": "User.Current.Notifications"
        },
        {
            "name": "User.Current.Subscriptions"
        },
        {
            "name": "User.Messages"
        },
        {
            "name": "User.Documents"
        },
        {
            "name": "User.Orders"
        },
        {
            "name": "User.Transactions"
        },
        {
            "name": "User.FeedbackMessage"
        },
        {
            "name": "User.Subscriptions"
        },
        {
            "name": "Documents"
        },
        {
            "name": "Blog"
        },
        {
            "name": "Blog.Category"
        },
        {
            "name": "Common"
        },
        {
            "name": "Catalog.Apartments"
        },
        {
            "name": "Catalog.Companies"
        },
        {
            "name": "Catalog.Company.Complexes"
        },
        {
            "name": "Catalog.Agencies"
        },
        {
            "name": "Catalog.Currencies"
        },
        {
            "name": "Address.Countries"
        },
        {
            "name": "Address.Cities"
        },
        {
            "name": "Address.Regions"
        },
        {
            "name": "Address.Streets"
        },
        {
            "name": "Raffle"
        },
        {
            "name": "Tasks"
        },
        {
            "name": "Charity"
        },
        {
            "name": "Pages"
        },
        {
            "name": "Settings.Contact"
        },
        {
            "name": "Websockets"
        },
        {
            "name": "Main.General"
        },
        {
            "name": "Notary"
        }
    ],
    "x-tagGroups": [
        {
            "name": "OAuth",
            "tags": [
                "OAuth"
            ]
        },
        {
            "name": "JWT",
            "tags": [
                "JWT"
            ]
        },
        {
            "name": "User",
            "tags": [
                "User",
                "User.Current",
                "User.Current.Notifications",
                "User.Documents",
                "User.Orders",
                "User.Transactions",
                "User.FeedbackMessage",
                "User.Subscriptions",
                "User.Current.Subscriptions",
                "User.Messages"
            ]
        },
        {
            "name": "Documents",
            "tags": [
                "Documents"
            ]
        },
        {
            "name": "Catalog",
            "tags": [
                "Catalog.Apartments",
                "Catalog.Companies",
                "Catalog.Company.Complexes",
                "Catalog.Agencies",
                "Catalog.Currencies"
            ]
        },
        {
            "name": "Address",
            "tags": [
                "Address.Countries",
                "Address.Cities",
                "Address.Regions",
                "Address.Streets"
            ]
        },
        {
            "name": "Common",
            "tags": [
                "Common"
            ]
        },
        {
            "name": "Blog",
            "tags": [
                "Blog",
                "Blog.Category"
            ]
        },
        {
            "name": "Raffle",
            "tags": [
                "Raffle"
            ]
        },
        {
            "name": "Charity",
            "tags": [
                "Charity"
            ]
        },
        {
            "name": "Tasks",
            "tags": [
                "Tasks"
            ]
        },
        {
            "name": "Pages",
            "tags": [
                "Pages"
            ]
        },
        {
            "name": "Settings",
            "tags": [
                "Settings.Contact"
            ]
        },
        {
            "name": "Websockets",
            "tags": [
                "Websockets"
            ]
        },
        {
            "name": "Main",
            "tags": [
                "Main"
            ]
        },
        {
            "name": "Notary",
            "tags": [
                "Notary"
            ]
        }
    ]
}